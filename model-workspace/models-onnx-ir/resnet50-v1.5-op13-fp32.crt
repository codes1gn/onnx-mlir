module attributes {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-linux-gnu"} {
  func.func @main_graph(%arg0: tensor<1x3x224x224xf32>) -> tensor<1x1000xf32> attributes {input_names = ["input"], output_names = ["output"]} {
    %0 = crt.constant : () -> tensor<1000x2048xf32>
    %1 = crt.constant : () -> tensor<1000xf32>
    %2 = crt.constant : () -> tensor<64x3x7x7xf32>
    %3 = crt.constant : () -> tensor<64xf32>
    %4 = crt.constant : () -> tensor<64x64x1x1xf32>
    %5 = crt.constant : () -> tensor<64x64x3x3xf32>
    %6 = crt.constant : () -> tensor<64xf32>
    %7 = crt.constant : () -> tensor<256x64x1x1xf32>
    %8 = crt.constant : () -> tensor<256x64x1x1xf32>
    %9 = crt.constant : () -> tensor<64x256x1x1xf32>
    %10 = crt.constant : () -> tensor<64x64x3x3xf32>
    %11 = crt.constant : () -> tensor<64xf32>
    %12 = crt.constant : () -> tensor<256x64x1x1xf32>
    %13 = crt.constant : () -> tensor<64x256x1x1xf32>
    %14 = crt.constant : () -> tensor<64x64x3x3xf32>
    %15 = crt.constant : () -> tensor<64xf32>
    %16 = crt.constant : () -> tensor<256x64x1x1xf32>
    %17 = crt.constant : () -> tensor<128x256x1x1xf32>
    %18 = crt.constant : () -> tensor<128x128x3x3xf32>
    %19 = crt.constant : () -> tensor<128xf32>
    %20 = crt.constant : () -> tensor<512x128x1x1xf32>
    %21 = crt.constant : () -> tensor<512x256x1x1xf32>
    %22 = crt.constant : () -> tensor<512xf32>
    %23 = crt.constant : () -> tensor<128x512x1x1xf32>
    %24 = crt.constant : () -> tensor<128x128x3x3xf32>
    %25 = crt.constant : () -> tensor<128xf32>
    %26 = crt.constant : () -> tensor<512x128x1x1xf32>
    %27 = crt.constant : () -> tensor<128x512x1x1xf32>
    %28 = crt.constant : () -> tensor<128x128x3x3xf32>
    %29 = crt.constant : () -> tensor<128xf32>
    %30 = crt.constant : () -> tensor<512x128x1x1xf32>
    %31 = crt.constant : () -> tensor<128x512x1x1xf32>
    %32 = crt.constant : () -> tensor<128x128x3x3xf32>
    %33 = crt.constant : () -> tensor<128xf32>
    %34 = crt.constant : () -> tensor<512x128x1x1xf32>
    %35 = crt.constant : () -> tensor<256x512x1x1xf32>
    %36 = crt.constant : () -> tensor<256x256x3x3xf32>
    %37 = crt.constant : () -> tensor<256xf32>
    %38 = crt.constant : () -> tensor<1024x256x1x1xf32>
    %39 = crt.constant : () -> tensor<1024x512x1x1xf32>
    %40 = crt.constant : () -> tensor<1024xf32>
    %41 = crt.constant : () -> tensor<256x1024x1x1xf32>
    %42 = crt.constant : () -> tensor<256x256x3x3xf32>
    %43 = crt.constant : () -> tensor<256xf32>
    %44 = crt.constant : () -> tensor<1024x256x1x1xf32>
    %45 = crt.constant : () -> tensor<256x1024x1x1xf32>
    %46 = crt.constant : () -> tensor<256x256x3x3xf32>
    %47 = crt.constant : () -> tensor<256xf32>
    %48 = crt.constant : () -> tensor<1024x256x1x1xf32>
    %49 = crt.constant : () -> tensor<256x1024x1x1xf32>
    %50 = crt.constant : () -> tensor<256x256x3x3xf32>
    %51 = crt.constant : () -> tensor<256xf32>
    %52 = crt.constant : () -> tensor<1024x256x1x1xf32>
    %53 = crt.constant : () -> tensor<256x1024x1x1xf32>
    %54 = crt.constant : () -> tensor<256x256x3x3xf32>
    %55 = crt.constant : () -> tensor<256xf32>
    %56 = crt.constant : () -> tensor<1024x256x1x1xf32>
    %57 = crt.constant : () -> tensor<256x1024x1x1xf32>
    %58 = crt.constant : () -> tensor<256x256x3x3xf32>
    %59 = crt.constant : () -> tensor<256xf32>
    %60 = crt.constant : () -> tensor<1024x256x1x1xf32>
    %61 = crt.constant : () -> tensor<512x1024x1x1xf32>
    %62 = crt.constant : () -> tensor<512x512x3x3xf32>
    %63 = crt.constant : () -> tensor<512xf32>
    %64 = crt.constant : () -> tensor<2048x512x1x1xf32>
    %65 = crt.constant : () -> tensor<2048x1024x1x1xf32>
    %66 = crt.constant : () -> tensor<2048xf32>
    %67 = crt.constant : () -> tensor<512x2048x1x1xf32>
    %68 = crt.constant : () -> tensor<512x512x3x3xf32>
    %69 = crt.constant : () -> tensor<512xf32>
    %70 = crt.constant : () -> tensor<2048x512x1x1xf32>
    %71 = crt.constant : () -> tensor<512x2048x1x1xf32>
    %72 = crt.constant : () -> tensor<512x512x3x3xf32>
    %73 = crt.constant : () -> tensor<512xf32>
    %74 = crt.constant : () -> tensor<2048x512x1x1xf32>
    %75 = crt.convadd %arg0, %2, %3 : (tensor<1x3x224x224xf32>, tensor<64x3x7x7xf32>, tensor<64xf32>) -> tensor<1x64x112x112xf32>
    %76 = crt.relu %75 : (tensor<1x64x112x112xf32>) -> tensor<1x64x112x112xf32>
    %77 = crt.maxpool %76 : (tensor<1x64x112x112xf32>) -> tensor<1x64x56x56xf32>
    %78 = crt.constant : () -> tensor<3xi64>
    %79 = crt.reshape %77, %78 : (tensor<1x64x56x56xf32>, tensor<3xi64>) -> tensor<1x64x3136xf32>
    %80 = crt.constant : () -> tensor<2xi64>
    %81 = crt.reshape %4, %80 : (tensor<64x64x1x1xf32>, tensor<2xi64>) -> tensor<64x64xf32>
    %82 = "onnx.MatMul"(%81, %79) : (tensor<64x64xf32>, tensor<1x64x3136xf32>) -> tensor<1x64x3136xf32>
    %83 = crt.constant : () -> tensor<1x64x1xf32>
    %84 = crt.add %82, %83 : (tensor<1x64x3136xf32>, tensor<1x64x1xf32>) -> tensor<1x64x3136xf32>
    %85 = crt.constant : () -> tensor<4xi64>
    %86 = crt.reshape %84, %85 : (tensor<1x64x3136xf32>, tensor<4xi64>) -> tensor<1x64x56x56xf32>
    %87 = crt.relu %86 : (tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
    %88 = crt.convadd %87, %5, %6 : (tensor<1x64x56x56xf32>, tensor<64x64x3x3xf32>, tensor<64xf32>) -> tensor<1x64x56x56xf32>
    %89 = crt.relu %88 : (tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
    %90 = crt.constant : () -> tensor<3xi64>
    %91 = crt.reshape %89, %90 : (tensor<1x64x56x56xf32>, tensor<3xi64>) -> tensor<1x64x3136xf32>
    %92 = crt.constant : () -> tensor<2xi64>
    %93 = crt.reshape %7, %92 : (tensor<256x64x1x1xf32>, tensor<2xi64>) -> tensor<256x64xf32>
    %94 = "onnx.MatMul"(%93, %91) : (tensor<256x64xf32>, tensor<1x64x3136xf32>) -> tensor<1x256x3136xf32>
    %95 = crt.constant : () -> tensor<1x256x1xf32>
    %96 = crt.add %94, %95 : (tensor<1x256x3136xf32>, tensor<1x256x1xf32>) -> tensor<1x256x3136xf32>
    %97 = crt.constant : () -> tensor<4xi64>
    %98 = crt.reshape %96, %97 : (tensor<1x256x3136xf32>, tensor<4xi64>) -> tensor<1x256x56x56xf32>
    %99 = crt.constant : () -> tensor<3xi64>
    %100 = crt.reshape %77, %99 : (tensor<1x64x56x56xf32>, tensor<3xi64>) -> tensor<1x64x3136xf32>
    %101 = crt.constant : () -> tensor<2xi64>
    %102 = crt.reshape %8, %101 : (tensor<256x64x1x1xf32>, tensor<2xi64>) -> tensor<256x64xf32>
    %103 = "onnx.MatMul"(%102, %100) : (tensor<256x64xf32>, tensor<1x64x3136xf32>) -> tensor<1x256x3136xf32>
    %104 = crt.constant : () -> tensor<1x256x1xf32>
    %105 = crt.add %103, %104 : (tensor<1x256x3136xf32>, tensor<1x256x1xf32>) -> tensor<1x256x3136xf32>
    %106 = crt.constant : () -> tensor<4xi64>
    %107 = crt.reshape %105, %106 : (tensor<1x256x3136xf32>, tensor<4xi64>) -> tensor<1x256x56x56xf32>
    %108 = crt.add %98, %107 : (tensor<1x256x56x56xf32>, tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
    %109 = crt.relu %108 : (tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
    %110 = crt.constant : () -> tensor<3xi64>
    %111 = crt.reshape %109, %110 : (tensor<1x256x56x56xf32>, tensor<3xi64>) -> tensor<1x256x3136xf32>
    %112 = crt.constant : () -> tensor<2xi64>
    %113 = crt.reshape %9, %112 : (tensor<64x256x1x1xf32>, tensor<2xi64>) -> tensor<64x256xf32>
    %114 = "onnx.MatMul"(%113, %111) : (tensor<64x256xf32>, tensor<1x256x3136xf32>) -> tensor<1x64x3136xf32>
    %115 = crt.constant : () -> tensor<1x64x1xf32>
    %116 = crt.add %114, %115 : (tensor<1x64x3136xf32>, tensor<1x64x1xf32>) -> tensor<1x64x3136xf32>
    %117 = crt.constant : () -> tensor<4xi64>
    %118 = crt.reshape %116, %117 : (tensor<1x64x3136xf32>, tensor<4xi64>) -> tensor<1x64x56x56xf32>
    %119 = crt.relu %118 : (tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
    %120 = crt.convadd %119, %10, %11 : (tensor<1x64x56x56xf32>, tensor<64x64x3x3xf32>, tensor<64xf32>) -> tensor<1x64x56x56xf32>
    %121 = crt.relu %120 : (tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
    %122 = crt.constant : () -> tensor<3xi64>
    %123 = crt.reshape %121, %122 : (tensor<1x64x56x56xf32>, tensor<3xi64>) -> tensor<1x64x3136xf32>
    %124 = crt.constant : () -> tensor<2xi64>
    %125 = crt.reshape %12, %124 : (tensor<256x64x1x1xf32>, tensor<2xi64>) -> tensor<256x64xf32>
    %126 = "onnx.MatMul"(%125, %123) : (tensor<256x64xf32>, tensor<1x64x3136xf32>) -> tensor<1x256x3136xf32>
    %127 = crt.constant : () -> tensor<1x256x1xf32>
    %128 = crt.add %126, %127 : (tensor<1x256x3136xf32>, tensor<1x256x1xf32>) -> tensor<1x256x3136xf32>
    %129 = crt.constant : () -> tensor<4xi64>
    %130 = crt.reshape %128, %129 : (tensor<1x256x3136xf32>, tensor<4xi64>) -> tensor<1x256x56x56xf32>
    %131 = crt.add %130, %109 : (tensor<1x256x56x56xf32>, tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
    %132 = crt.relu %131 : (tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
    %133 = crt.constant : () -> tensor<3xi64>
    %134 = crt.reshape %132, %133 : (tensor<1x256x56x56xf32>, tensor<3xi64>) -> tensor<1x256x3136xf32>
    %135 = crt.constant : () -> tensor<2xi64>
    %136 = crt.reshape %13, %135 : (tensor<64x256x1x1xf32>, tensor<2xi64>) -> tensor<64x256xf32>
    %137 = "onnx.MatMul"(%136, %134) : (tensor<64x256xf32>, tensor<1x256x3136xf32>) -> tensor<1x64x3136xf32>
    %138 = crt.constant : () -> tensor<1x64x1xf32>
    %139 = crt.add %137, %138 : (tensor<1x64x3136xf32>, tensor<1x64x1xf32>) -> tensor<1x64x3136xf32>
    %140 = crt.constant : () -> tensor<4xi64>
    %141 = crt.reshape %139, %140 : (tensor<1x64x3136xf32>, tensor<4xi64>) -> tensor<1x64x56x56xf32>
    %142 = crt.relu %141 : (tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
    %143 = crt.convadd %142, %14, %15 : (tensor<1x64x56x56xf32>, tensor<64x64x3x3xf32>, tensor<64xf32>) -> tensor<1x64x56x56xf32>
    %144 = crt.relu %143 : (tensor<1x64x56x56xf32>) -> tensor<1x64x56x56xf32>
    %145 = crt.constant : () -> tensor<3xi64>
    %146 = crt.reshape %144, %145 : (tensor<1x64x56x56xf32>, tensor<3xi64>) -> tensor<1x64x3136xf32>
    %147 = crt.constant : () -> tensor<2xi64>
    %148 = crt.reshape %16, %147 : (tensor<256x64x1x1xf32>, tensor<2xi64>) -> tensor<256x64xf32>
    %149 = "onnx.MatMul"(%148, %146) : (tensor<256x64xf32>, tensor<1x64x3136xf32>) -> tensor<1x256x3136xf32>
    %150 = crt.constant : () -> tensor<1x256x1xf32>
    %151 = crt.add %149, %150 : (tensor<1x256x3136xf32>, tensor<1x256x1xf32>) -> tensor<1x256x3136xf32>
    %152 = crt.constant : () -> tensor<4xi64>
    %153 = crt.reshape %151, %152 : (tensor<1x256x3136xf32>, tensor<4xi64>) -> tensor<1x256x56x56xf32>
    %154 = crt.add %153, %132 : (tensor<1x256x56x56xf32>, tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
    %155 = crt.relu %154 : (tensor<1x256x56x56xf32>) -> tensor<1x256x56x56xf32>
    %156 = crt.constant : () -> tensor<3xi64>
    %157 = crt.reshape %155, %156 : (tensor<1x256x56x56xf32>, tensor<3xi64>) -> tensor<1x256x3136xf32>
    %158 = crt.constant : () -> tensor<2xi64>
    %159 = crt.reshape %17, %158 : (tensor<128x256x1x1xf32>, tensor<2xi64>) -> tensor<128x256xf32>
    %160 = "onnx.MatMul"(%159, %157) : (tensor<128x256xf32>, tensor<1x256x3136xf32>) -> tensor<1x128x3136xf32>
    %161 = crt.constant : () -> tensor<1x128x1xf32>
    %162 = crt.add %160, %161 : (tensor<1x128x3136xf32>, tensor<1x128x1xf32>) -> tensor<1x128x3136xf32>
    %163 = crt.constant : () -> tensor<4xi64>
    %164 = crt.reshape %162, %163 : (tensor<1x128x3136xf32>, tensor<4xi64>) -> tensor<1x128x56x56xf32>
    %165 = crt.relu %164 : (tensor<1x128x56x56xf32>) -> tensor<1x128x56x56xf32>
    %166 = crt.convadd %165, %18, %19 : (tensor<1x128x56x56xf32>, tensor<128x128x3x3xf32>, tensor<128xf32>) -> tensor<1x128x28x28xf32>
    %167 = crt.relu %166 : (tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
    %168 = crt.constant : () -> tensor<3xi64>
    %169 = crt.reshape %167, %168 : (tensor<1x128x28x28xf32>, tensor<3xi64>) -> tensor<1x128x784xf32>
    %170 = crt.constant : () -> tensor<2xi64>
    %171 = crt.reshape %20, %170 : (tensor<512x128x1x1xf32>, tensor<2xi64>) -> tensor<512x128xf32>
    %172 = "onnx.MatMul"(%171, %169) : (tensor<512x128xf32>, tensor<1x128x784xf32>) -> tensor<1x512x784xf32>
    %173 = crt.constant : () -> tensor<1x512x1xf32>
    %174 = crt.add %172, %173 : (tensor<1x512x784xf32>, tensor<1x512x1xf32>) -> tensor<1x512x784xf32>
    %175 = crt.constant : () -> tensor<4xi64>
    %176 = crt.reshape %174, %175 : (tensor<1x512x784xf32>, tensor<4xi64>) -> tensor<1x512x28x28xf32>
    %177 = crt.convadd %155, %21, %22 : (tensor<1x256x56x56xf32>, tensor<512x256x1x1xf32>, tensor<512xf32>) -> tensor<1x512x28x28xf32>
    %178 = crt.add %176, %177 : (tensor<1x512x28x28xf32>, tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
    %179 = crt.relu %178 : (tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
    %180 = crt.constant : () -> tensor<3xi64>
    %181 = crt.reshape %179, %180 : (tensor<1x512x28x28xf32>, tensor<3xi64>) -> tensor<1x512x784xf32>
    %182 = crt.constant : () -> tensor<2xi64>
    %183 = crt.reshape %23, %182 : (tensor<128x512x1x1xf32>, tensor<2xi64>) -> tensor<128x512xf32>
    %184 = "onnx.MatMul"(%183, %181) : (tensor<128x512xf32>, tensor<1x512x784xf32>) -> tensor<1x128x784xf32>
    %185 = crt.constant : () -> tensor<1x128x1xf32>
    %186 = crt.add %184, %185 : (tensor<1x128x784xf32>, tensor<1x128x1xf32>) -> tensor<1x128x784xf32>
    %187 = crt.constant : () -> tensor<4xi64>
    %188 = crt.reshape %186, %187 : (tensor<1x128x784xf32>, tensor<4xi64>) -> tensor<1x128x28x28xf32>
    %189 = crt.relu %188 : (tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
    %190 = crt.convadd %189, %24, %25 : (tensor<1x128x28x28xf32>, tensor<128x128x3x3xf32>, tensor<128xf32>) -> tensor<1x128x28x28xf32>
    %191 = crt.relu %190 : (tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
    %192 = crt.constant : () -> tensor<3xi64>
    %193 = crt.reshape %191, %192 : (tensor<1x128x28x28xf32>, tensor<3xi64>) -> tensor<1x128x784xf32>
    %194 = crt.constant : () -> tensor<2xi64>
    %195 = crt.reshape %26, %194 : (tensor<512x128x1x1xf32>, tensor<2xi64>) -> tensor<512x128xf32>
    %196 = "onnx.MatMul"(%195, %193) : (tensor<512x128xf32>, tensor<1x128x784xf32>) -> tensor<1x512x784xf32>
    %197 = crt.constant : () -> tensor<1x512x1xf32>
    %198 = crt.add %196, %197 : (tensor<1x512x784xf32>, tensor<1x512x1xf32>) -> tensor<1x512x784xf32>
    %199 = crt.constant : () -> tensor<4xi64>
    %200 = crt.reshape %198, %199 : (tensor<1x512x784xf32>, tensor<4xi64>) -> tensor<1x512x28x28xf32>
    %201 = crt.add %200, %179 : (tensor<1x512x28x28xf32>, tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
    %202 = crt.relu %201 : (tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
    %203 = crt.constant : () -> tensor<3xi64>
    %204 = crt.reshape %202, %203 : (tensor<1x512x28x28xf32>, tensor<3xi64>) -> tensor<1x512x784xf32>
    %205 = crt.constant : () -> tensor<2xi64>
    %206 = crt.reshape %27, %205 : (tensor<128x512x1x1xf32>, tensor<2xi64>) -> tensor<128x512xf32>
    %207 = "onnx.MatMul"(%206, %204) : (tensor<128x512xf32>, tensor<1x512x784xf32>) -> tensor<1x128x784xf32>
    %208 = crt.constant : () -> tensor<1x128x1xf32>
    %209 = crt.add %207, %208 : (tensor<1x128x784xf32>, tensor<1x128x1xf32>) -> tensor<1x128x784xf32>
    %210 = crt.constant : () -> tensor<4xi64>
    %211 = crt.reshape %209, %210 : (tensor<1x128x784xf32>, tensor<4xi64>) -> tensor<1x128x28x28xf32>
    %212 = crt.relu %211 : (tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
    %213 = crt.convadd %212, %28, %29 : (tensor<1x128x28x28xf32>, tensor<128x128x3x3xf32>, tensor<128xf32>) -> tensor<1x128x28x28xf32>
    %214 = crt.relu %213 : (tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
    %215 = crt.constant : () -> tensor<3xi64>
    %216 = crt.reshape %214, %215 : (tensor<1x128x28x28xf32>, tensor<3xi64>) -> tensor<1x128x784xf32>
    %217 = crt.constant : () -> tensor<2xi64>
    %218 = crt.reshape %30, %217 : (tensor<512x128x1x1xf32>, tensor<2xi64>) -> tensor<512x128xf32>
    %219 = "onnx.MatMul"(%218, %216) : (tensor<512x128xf32>, tensor<1x128x784xf32>) -> tensor<1x512x784xf32>
    %220 = crt.constant : () -> tensor<1x512x1xf32>
    %221 = crt.add %219, %220 : (tensor<1x512x784xf32>, tensor<1x512x1xf32>) -> tensor<1x512x784xf32>
    %222 = crt.constant : () -> tensor<4xi64>
    %223 = crt.reshape %221, %222 : (tensor<1x512x784xf32>, tensor<4xi64>) -> tensor<1x512x28x28xf32>
    %224 = crt.add %223, %202 : (tensor<1x512x28x28xf32>, tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
    %225 = crt.relu %224 : (tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
    %226 = crt.constant : () -> tensor<3xi64>
    %227 = crt.reshape %225, %226 : (tensor<1x512x28x28xf32>, tensor<3xi64>) -> tensor<1x512x784xf32>
    %228 = crt.constant : () -> tensor<2xi64>
    %229 = crt.reshape %31, %228 : (tensor<128x512x1x1xf32>, tensor<2xi64>) -> tensor<128x512xf32>
    %230 = "onnx.MatMul"(%229, %227) : (tensor<128x512xf32>, tensor<1x512x784xf32>) -> tensor<1x128x784xf32>
    %231 = crt.constant : () -> tensor<1x128x1xf32>
    %232 = crt.add %230, %231 : (tensor<1x128x784xf32>, tensor<1x128x1xf32>) -> tensor<1x128x784xf32>
    %233 = crt.constant : () -> tensor<4xi64>
    %234 = crt.reshape %232, %233 : (tensor<1x128x784xf32>, tensor<4xi64>) -> tensor<1x128x28x28xf32>
    %235 = crt.relu %234 : (tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
    %236 = crt.convadd %235, %32, %33 : (tensor<1x128x28x28xf32>, tensor<128x128x3x3xf32>, tensor<128xf32>) -> tensor<1x128x28x28xf32>
    %237 = crt.relu %236 : (tensor<1x128x28x28xf32>) -> tensor<1x128x28x28xf32>
    %238 = crt.constant : () -> tensor<3xi64>
    %239 = crt.reshape %237, %238 : (tensor<1x128x28x28xf32>, tensor<3xi64>) -> tensor<1x128x784xf32>
    %240 = crt.constant : () -> tensor<2xi64>
    %241 = crt.reshape %34, %240 : (tensor<512x128x1x1xf32>, tensor<2xi64>) -> tensor<512x128xf32>
    %242 = "onnx.MatMul"(%241, %239) : (tensor<512x128xf32>, tensor<1x128x784xf32>) -> tensor<1x512x784xf32>
    %243 = crt.constant : () -> tensor<1x512x1xf32>
    %244 = crt.add %242, %243 : (tensor<1x512x784xf32>, tensor<1x512x1xf32>) -> tensor<1x512x784xf32>
    %245 = crt.constant : () -> tensor<4xi64>
    %246 = crt.reshape %244, %245 : (tensor<1x512x784xf32>, tensor<4xi64>) -> tensor<1x512x28x28xf32>
    %247 = crt.add %246, %225 : (tensor<1x512x28x28xf32>, tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
    %248 = crt.relu %247 : (tensor<1x512x28x28xf32>) -> tensor<1x512x28x28xf32>
    %249 = crt.constant : () -> tensor<3xi64>
    %250 = crt.reshape %248, %249 : (tensor<1x512x28x28xf32>, tensor<3xi64>) -> tensor<1x512x784xf32>
    %251 = crt.constant : () -> tensor<2xi64>
    %252 = crt.reshape %35, %251 : (tensor<256x512x1x1xf32>, tensor<2xi64>) -> tensor<256x512xf32>
    %253 = "onnx.MatMul"(%252, %250) : (tensor<256x512xf32>, tensor<1x512x784xf32>) -> tensor<1x256x784xf32>
    %254 = crt.constant : () -> tensor<1x256x1xf32>
    %255 = crt.add %253, %254 : (tensor<1x256x784xf32>, tensor<1x256x1xf32>) -> tensor<1x256x784xf32>
    %256 = crt.constant : () -> tensor<4xi64>
    %257 = crt.reshape %255, %256 : (tensor<1x256x784xf32>, tensor<4xi64>) -> tensor<1x256x28x28xf32>
    %258 = crt.relu %257 : (tensor<1x256x28x28xf32>) -> tensor<1x256x28x28xf32>
    %259 = crt.convadd %258, %36, %37 : (tensor<1x256x28x28xf32>, tensor<256x256x3x3xf32>, tensor<256xf32>) -> tensor<1x256x14x14xf32>
    %260 = crt.relu %259 : (tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
    %261 = crt.constant : () -> tensor<3xi64>
    %262 = crt.reshape %260, %261 : (tensor<1x256x14x14xf32>, tensor<3xi64>) -> tensor<1x256x196xf32>
    %263 = crt.constant : () -> tensor<2xi64>
    %264 = crt.reshape %38, %263 : (tensor<1024x256x1x1xf32>, tensor<2xi64>) -> tensor<1024x256xf32>
    %265 = "onnx.MatMul"(%264, %262) : (tensor<1024x256xf32>, tensor<1x256x196xf32>) -> tensor<1x1024x196xf32>
    %266 = crt.constant : () -> tensor<1x1024x1xf32>
    %267 = crt.add %265, %266 : (tensor<1x1024x196xf32>, tensor<1x1024x1xf32>) -> tensor<1x1024x196xf32>
    %268 = crt.constant : () -> tensor<4xi64>
    %269 = crt.reshape %267, %268 : (tensor<1x1024x196xf32>, tensor<4xi64>) -> tensor<1x1024x14x14xf32>
    %270 = crt.convadd %248, %39, %40 : (tensor<1x512x28x28xf32>, tensor<1024x512x1x1xf32>, tensor<1024xf32>) -> tensor<1x1024x14x14xf32>
    %271 = crt.add %269, %270 : (tensor<1x1024x14x14xf32>, tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
    %272 = crt.relu %271 : (tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
    %273 = crt.constant : () -> tensor<3xi64>
    %274 = crt.reshape %272, %273 : (tensor<1x1024x14x14xf32>, tensor<3xi64>) -> tensor<1x1024x196xf32>
    %275 = crt.constant : () -> tensor<2xi64>
    %276 = crt.reshape %41, %275 : (tensor<256x1024x1x1xf32>, tensor<2xi64>) -> tensor<256x1024xf32>
    %277 = "onnx.MatMul"(%276, %274) : (tensor<256x1024xf32>, tensor<1x1024x196xf32>) -> tensor<1x256x196xf32>
    %278 = crt.constant : () -> tensor<1x256x1xf32>
    %279 = crt.add %277, %278 : (tensor<1x256x196xf32>, tensor<1x256x1xf32>) -> tensor<1x256x196xf32>
    %280 = crt.constant : () -> tensor<4xi64>
    %281 = crt.reshape %279, %280 : (tensor<1x256x196xf32>, tensor<4xi64>) -> tensor<1x256x14x14xf32>
    %282 = crt.relu %281 : (tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
    %283 = crt.convadd %282, %42, %43 : (tensor<1x256x14x14xf32>, tensor<256x256x3x3xf32>, tensor<256xf32>) -> tensor<1x256x14x14xf32>
    %284 = crt.relu %283 : (tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
    %285 = crt.constant : () -> tensor<3xi64>
    %286 = crt.reshape %284, %285 : (tensor<1x256x14x14xf32>, tensor<3xi64>) -> tensor<1x256x196xf32>
    %287 = crt.constant : () -> tensor<2xi64>
    %288 = crt.reshape %44, %287 : (tensor<1024x256x1x1xf32>, tensor<2xi64>) -> tensor<1024x256xf32>
    %289 = "onnx.MatMul"(%288, %286) : (tensor<1024x256xf32>, tensor<1x256x196xf32>) -> tensor<1x1024x196xf32>
    %290 = crt.constant : () -> tensor<1x1024x1xf32>
    %291 = crt.add %289, %290 : (tensor<1x1024x196xf32>, tensor<1x1024x1xf32>) -> tensor<1x1024x196xf32>
    %292 = crt.constant : () -> tensor<4xi64>
    %293 = crt.reshape %291, %292 : (tensor<1x1024x196xf32>, tensor<4xi64>) -> tensor<1x1024x14x14xf32>
    %294 = crt.add %293, %272 : (tensor<1x1024x14x14xf32>, tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
    %295 = crt.relu %294 : (tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
    %296 = crt.constant : () -> tensor<3xi64>
    %297 = crt.reshape %295, %296 : (tensor<1x1024x14x14xf32>, tensor<3xi64>) -> tensor<1x1024x196xf32>
    %298 = crt.constant : () -> tensor<2xi64>
    %299 = crt.reshape %45, %298 : (tensor<256x1024x1x1xf32>, tensor<2xi64>) -> tensor<256x1024xf32>
    %300 = "onnx.MatMul"(%299, %297) : (tensor<256x1024xf32>, tensor<1x1024x196xf32>) -> tensor<1x256x196xf32>
    %301 = crt.constant : () -> tensor<1x256x1xf32>
    %302 = crt.add %300, %301 : (tensor<1x256x196xf32>, tensor<1x256x1xf32>) -> tensor<1x256x196xf32>
    %303 = crt.constant : () -> tensor<4xi64>
    %304 = crt.reshape %302, %303 : (tensor<1x256x196xf32>, tensor<4xi64>) -> tensor<1x256x14x14xf32>
    %305 = crt.relu %304 : (tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
    %306 = crt.convadd %305, %46, %47 : (tensor<1x256x14x14xf32>, tensor<256x256x3x3xf32>, tensor<256xf32>) -> tensor<1x256x14x14xf32>
    %307 = crt.relu %306 : (tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
    %308 = crt.constant : () -> tensor<3xi64>
    %309 = crt.reshape %307, %308 : (tensor<1x256x14x14xf32>, tensor<3xi64>) -> tensor<1x256x196xf32>
    %310 = crt.constant : () -> tensor<2xi64>
    %311 = crt.reshape %48, %310 : (tensor<1024x256x1x1xf32>, tensor<2xi64>) -> tensor<1024x256xf32>
    %312 = "onnx.MatMul"(%311, %309) : (tensor<1024x256xf32>, tensor<1x256x196xf32>) -> tensor<1x1024x196xf32>
    %313 = crt.constant : () -> tensor<1x1024x1xf32>
    %314 = crt.add %312, %313 : (tensor<1x1024x196xf32>, tensor<1x1024x1xf32>) -> tensor<1x1024x196xf32>
    %315 = crt.constant : () -> tensor<4xi64>
    %316 = crt.reshape %314, %315 : (tensor<1x1024x196xf32>, tensor<4xi64>) -> tensor<1x1024x14x14xf32>
    %317 = crt.add %316, %295 : (tensor<1x1024x14x14xf32>, tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
    %318 = crt.relu %317 : (tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
    %319 = crt.constant : () -> tensor<3xi64>
    %320 = crt.reshape %318, %319 : (tensor<1x1024x14x14xf32>, tensor<3xi64>) -> tensor<1x1024x196xf32>
    %321 = crt.constant : () -> tensor<2xi64>
    %322 = crt.reshape %49, %321 : (tensor<256x1024x1x1xf32>, tensor<2xi64>) -> tensor<256x1024xf32>
    %323 = "onnx.MatMul"(%322, %320) : (tensor<256x1024xf32>, tensor<1x1024x196xf32>) -> tensor<1x256x196xf32>
    %324 = crt.constant : () -> tensor<1x256x1xf32>
    %325 = crt.add %323, %324 : (tensor<1x256x196xf32>, tensor<1x256x1xf32>) -> tensor<1x256x196xf32>
    %326 = crt.constant : () -> tensor<4xi64>
    %327 = crt.reshape %325, %326 : (tensor<1x256x196xf32>, tensor<4xi64>) -> tensor<1x256x14x14xf32>
    %328 = crt.relu %327 : (tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
    %329 = crt.convadd %328, %50, %51 : (tensor<1x256x14x14xf32>, tensor<256x256x3x3xf32>, tensor<256xf32>) -> tensor<1x256x14x14xf32>
    %330 = crt.relu %329 : (tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
    %331 = crt.constant : () -> tensor<3xi64>
    %332 = crt.reshape %330, %331 : (tensor<1x256x14x14xf32>, tensor<3xi64>) -> tensor<1x256x196xf32>
    %333 = crt.constant : () -> tensor<2xi64>
    %334 = crt.reshape %52, %333 : (tensor<1024x256x1x1xf32>, tensor<2xi64>) -> tensor<1024x256xf32>
    %335 = "onnx.MatMul"(%334, %332) : (tensor<1024x256xf32>, tensor<1x256x196xf32>) -> tensor<1x1024x196xf32>
    %336 = crt.constant : () -> tensor<1x1024x1xf32>
    %337 = crt.add %335, %336 : (tensor<1x1024x196xf32>, tensor<1x1024x1xf32>) -> tensor<1x1024x196xf32>
    %338 = crt.constant : () -> tensor<4xi64>
    %339 = crt.reshape %337, %338 : (tensor<1x1024x196xf32>, tensor<4xi64>) -> tensor<1x1024x14x14xf32>
    %340 = crt.add %339, %318 : (tensor<1x1024x14x14xf32>, tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
    %341 = crt.relu %340 : (tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
    %342 = crt.constant : () -> tensor<3xi64>
    %343 = crt.reshape %341, %342 : (tensor<1x1024x14x14xf32>, tensor<3xi64>) -> tensor<1x1024x196xf32>
    %344 = crt.constant : () -> tensor<2xi64>
    %345 = crt.reshape %53, %344 : (tensor<256x1024x1x1xf32>, tensor<2xi64>) -> tensor<256x1024xf32>
    %346 = "onnx.MatMul"(%345, %343) : (tensor<256x1024xf32>, tensor<1x1024x196xf32>) -> tensor<1x256x196xf32>
    %347 = crt.constant : () -> tensor<1x256x1xf32>
    %348 = crt.add %346, %347 : (tensor<1x256x196xf32>, tensor<1x256x1xf32>) -> tensor<1x256x196xf32>
    %349 = crt.constant : () -> tensor<4xi64>
    %350 = crt.reshape %348, %349 : (tensor<1x256x196xf32>, tensor<4xi64>) -> tensor<1x256x14x14xf32>
    %351 = crt.relu %350 : (tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
    %352 = crt.convadd %351, %54, %55 : (tensor<1x256x14x14xf32>, tensor<256x256x3x3xf32>, tensor<256xf32>) -> tensor<1x256x14x14xf32>
    %353 = crt.relu %352 : (tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
    %354 = crt.constant : () -> tensor<3xi64>
    %355 = crt.reshape %353, %354 : (tensor<1x256x14x14xf32>, tensor<3xi64>) -> tensor<1x256x196xf32>
    %356 = crt.constant : () -> tensor<2xi64>
    %357 = crt.reshape %56, %356 : (tensor<1024x256x1x1xf32>, tensor<2xi64>) -> tensor<1024x256xf32>
    %358 = "onnx.MatMul"(%357, %355) : (tensor<1024x256xf32>, tensor<1x256x196xf32>) -> tensor<1x1024x196xf32>
    %359 = crt.constant : () -> tensor<1x1024x1xf32>
    %360 = crt.add %358, %359 : (tensor<1x1024x196xf32>, tensor<1x1024x1xf32>) -> tensor<1x1024x196xf32>
    %361 = crt.constant : () -> tensor<4xi64>
    %362 = crt.reshape %360, %361 : (tensor<1x1024x196xf32>, tensor<4xi64>) -> tensor<1x1024x14x14xf32>
    %363 = crt.add %362, %341 : (tensor<1x1024x14x14xf32>, tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
    %364 = crt.relu %363 : (tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
    %365 = crt.constant : () -> tensor<3xi64>
    %366 = crt.reshape %364, %365 : (tensor<1x1024x14x14xf32>, tensor<3xi64>) -> tensor<1x1024x196xf32>
    %367 = crt.constant : () -> tensor<2xi64>
    %368 = crt.reshape %57, %367 : (tensor<256x1024x1x1xf32>, tensor<2xi64>) -> tensor<256x1024xf32>
    %369 = "onnx.MatMul"(%368, %366) : (tensor<256x1024xf32>, tensor<1x1024x196xf32>) -> tensor<1x256x196xf32>
    %370 = crt.constant : () -> tensor<1x256x1xf32>
    %371 = crt.add %369, %370 : (tensor<1x256x196xf32>, tensor<1x256x1xf32>) -> tensor<1x256x196xf32>
    %372 = crt.constant : () -> tensor<4xi64>
    %373 = crt.reshape %371, %372 : (tensor<1x256x196xf32>, tensor<4xi64>) -> tensor<1x256x14x14xf32>
    %374 = crt.relu %373 : (tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
    %375 = crt.convadd %374, %58, %59 : (tensor<1x256x14x14xf32>, tensor<256x256x3x3xf32>, tensor<256xf32>) -> tensor<1x256x14x14xf32>
    %376 = crt.relu %375 : (tensor<1x256x14x14xf32>) -> tensor<1x256x14x14xf32>
    %377 = crt.constant : () -> tensor<3xi64>
    %378 = crt.reshape %376, %377 : (tensor<1x256x14x14xf32>, tensor<3xi64>) -> tensor<1x256x196xf32>
    %379 = crt.constant : () -> tensor<2xi64>
    %380 = crt.reshape %60, %379 : (tensor<1024x256x1x1xf32>, tensor<2xi64>) -> tensor<1024x256xf32>
    %381 = "onnx.MatMul"(%380, %378) : (tensor<1024x256xf32>, tensor<1x256x196xf32>) -> tensor<1x1024x196xf32>
    %382 = crt.constant : () -> tensor<1x1024x1xf32>
    %383 = crt.add %381, %382 : (tensor<1x1024x196xf32>, tensor<1x1024x1xf32>) -> tensor<1x1024x196xf32>
    %384 = crt.constant : () -> tensor<4xi64>
    %385 = crt.reshape %383, %384 : (tensor<1x1024x196xf32>, tensor<4xi64>) -> tensor<1x1024x14x14xf32>
    %386 = crt.add %385, %364 : (tensor<1x1024x14x14xf32>, tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
    %387 = crt.relu %386 : (tensor<1x1024x14x14xf32>) -> tensor<1x1024x14x14xf32>
    %388 = crt.constant : () -> tensor<3xi64>
    %389 = crt.reshape %387, %388 : (tensor<1x1024x14x14xf32>, tensor<3xi64>) -> tensor<1x1024x196xf32>
    %390 = crt.constant : () -> tensor<2xi64>
    %391 = crt.reshape %61, %390 : (tensor<512x1024x1x1xf32>, tensor<2xi64>) -> tensor<512x1024xf32>
    %392 = "onnx.MatMul"(%391, %389) : (tensor<512x1024xf32>, tensor<1x1024x196xf32>) -> tensor<1x512x196xf32>
    %393 = crt.constant : () -> tensor<1x512x1xf32>
    %394 = crt.add %392, %393 : (tensor<1x512x196xf32>, tensor<1x512x1xf32>) -> tensor<1x512x196xf32>
    %395 = crt.constant : () -> tensor<4xi64>
    %396 = crt.reshape %394, %395 : (tensor<1x512x196xf32>, tensor<4xi64>) -> tensor<1x512x14x14xf32>
    %397 = crt.relu %396 : (tensor<1x512x14x14xf32>) -> tensor<1x512x14x14xf32>
    %398 = crt.convadd %397, %62, %63 : (tensor<1x512x14x14xf32>, tensor<512x512x3x3xf32>, tensor<512xf32>) -> tensor<1x512x7x7xf32>
    %399 = crt.relu %398 : (tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
    %400 = crt.constant : () -> tensor<3xi64>
    %401 = crt.reshape %399, %400 : (tensor<1x512x7x7xf32>, tensor<3xi64>) -> tensor<1x512x49xf32>
    %402 = crt.constant : () -> tensor<2xi64>
    %403 = crt.reshape %64, %402 : (tensor<2048x512x1x1xf32>, tensor<2xi64>) -> tensor<2048x512xf32>
    %404 = "onnx.MatMul"(%403, %401) : (tensor<2048x512xf32>, tensor<1x512x49xf32>) -> tensor<1x2048x49xf32>
    %405 = crt.constant : () -> tensor<1x2048x1xf32>
    %406 = crt.add %404, %405 : (tensor<1x2048x49xf32>, tensor<1x2048x1xf32>) -> tensor<1x2048x49xf32>
    %407 = crt.constant : () -> tensor<4xi64>
    %408 = crt.reshape %406, %407 : (tensor<1x2048x49xf32>, tensor<4xi64>) -> tensor<1x2048x7x7xf32>
    %409 = crt.convadd %387, %65, %66 : (tensor<1x1024x14x14xf32>, tensor<2048x1024x1x1xf32>, tensor<2048xf32>) -> tensor<1x2048x7x7xf32>
    %410 = crt.add %408, %409 : (tensor<1x2048x7x7xf32>, tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
    %411 = crt.relu %410 : (tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
    %412 = crt.constant : () -> tensor<3xi64>
    %413 = crt.reshape %411, %412 : (tensor<1x2048x7x7xf32>, tensor<3xi64>) -> tensor<1x2048x49xf32>
    %414 = crt.constant : () -> tensor<2xi64>
    %415 = crt.reshape %67, %414 : (tensor<512x2048x1x1xf32>, tensor<2xi64>) -> tensor<512x2048xf32>
    %416 = "onnx.MatMul"(%415, %413) : (tensor<512x2048xf32>, tensor<1x2048x49xf32>) -> tensor<1x512x49xf32>
    %417 = crt.constant : () -> tensor<1x512x1xf32>
    %418 = crt.add %416, %417 : (tensor<1x512x49xf32>, tensor<1x512x1xf32>) -> tensor<1x512x49xf32>
    %419 = crt.constant : () -> tensor<4xi64>
    %420 = crt.reshape %418, %419 : (tensor<1x512x49xf32>, tensor<4xi64>) -> tensor<1x512x7x7xf32>
    %421 = crt.relu %420 : (tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
    %422 = crt.convadd %421, %68, %69 : (tensor<1x512x7x7xf32>, tensor<512x512x3x3xf32>, tensor<512xf32>) -> tensor<1x512x7x7xf32>
    %423 = crt.relu %422 : (tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
    %424 = crt.constant : () -> tensor<3xi64>
    %425 = crt.reshape %423, %424 : (tensor<1x512x7x7xf32>, tensor<3xi64>) -> tensor<1x512x49xf32>
    %426 = crt.constant : () -> tensor<2xi64>
    %427 = crt.reshape %70, %426 : (tensor<2048x512x1x1xf32>, tensor<2xi64>) -> tensor<2048x512xf32>
    %428 = "onnx.MatMul"(%427, %425) : (tensor<2048x512xf32>, tensor<1x512x49xf32>) -> tensor<1x2048x49xf32>
    %429 = crt.constant : () -> tensor<1x2048x1xf32>
    %430 = crt.add %428, %429 : (tensor<1x2048x49xf32>, tensor<1x2048x1xf32>) -> tensor<1x2048x49xf32>
    %431 = crt.constant : () -> tensor<4xi64>
    %432 = crt.reshape %430, %431 : (tensor<1x2048x49xf32>, tensor<4xi64>) -> tensor<1x2048x7x7xf32>
    %433 = crt.add %432, %411 : (tensor<1x2048x7x7xf32>, tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
    %434 = crt.relu %433 : (tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
    %435 = crt.constant : () -> tensor<3xi64>
    %436 = crt.reshape %434, %435 : (tensor<1x2048x7x7xf32>, tensor<3xi64>) -> tensor<1x2048x49xf32>
    %437 = crt.constant : () -> tensor<2xi64>
    %438 = crt.reshape %71, %437 : (tensor<512x2048x1x1xf32>, tensor<2xi64>) -> tensor<512x2048xf32>
    %439 = "onnx.MatMul"(%438, %436) : (tensor<512x2048xf32>, tensor<1x2048x49xf32>) -> tensor<1x512x49xf32>
    %440 = crt.constant : () -> tensor<1x512x1xf32>
    %441 = crt.add %439, %440 : (tensor<1x512x49xf32>, tensor<1x512x1xf32>) -> tensor<1x512x49xf32>
    %442 = crt.constant : () -> tensor<4xi64>
    %443 = crt.reshape %441, %442 : (tensor<1x512x49xf32>, tensor<4xi64>) -> tensor<1x512x7x7xf32>
    %444 = crt.relu %443 : (tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
    %445 = crt.convadd %444, %72, %73 : (tensor<1x512x7x7xf32>, tensor<512x512x3x3xf32>, tensor<512xf32>) -> tensor<1x512x7x7xf32>
    %446 = crt.relu %445 : (tensor<1x512x7x7xf32>) -> tensor<1x512x7x7xf32>
    %447 = crt.constant : () -> tensor<3xi64>
    %448 = crt.reshape %446, %447 : (tensor<1x512x7x7xf32>, tensor<3xi64>) -> tensor<1x512x49xf32>
    %449 = crt.constant : () -> tensor<2xi64>
    %450 = crt.reshape %74, %449 : (tensor<2048x512x1x1xf32>, tensor<2xi64>) -> tensor<2048x512xf32>
    %451 = "onnx.MatMul"(%450, %448) : (tensor<2048x512xf32>, tensor<1x512x49xf32>) -> tensor<1x2048x49xf32>
    %452 = crt.constant : () -> tensor<1x2048x1xf32>
    %453 = crt.add %451, %452 : (tensor<1x2048x49xf32>, tensor<1x2048x1xf32>) -> tensor<1x2048x49xf32>
    %454 = crt.constant : () -> tensor<4xi64>
    %455 = crt.reshape %453, %454 : (tensor<1x2048x49xf32>, tensor<4xi64>) -> tensor<1x2048x7x7xf32>
    %456 = crt.add %455, %434 : (tensor<1x2048x7x7xf32>, tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
    %457 = crt.relu %456 : (tensor<1x2048x7x7xf32>) -> tensor<1x2048x7x7xf32>
    %458 = crt.reducemean %457 : (tensor<1x2048x7x7xf32>) -> tensor<1x2048x1x1xf32>
    %459 = crt.flatten %458 : (tensor<1x2048x1x1xf32>) -> tensor<1x2048xf32>
    %460 = crt.gemm %459, %0, %1 : (tensor<1x2048xf32>, tensor<1000x2048xf32>, tensor<1000xf32>) -> tensor<1x1000xf32>
    return %460 : tensor<1x1000xf32>
  }
  "onnx.EntryPoint"() {func = @main_graph} : () -> ()
}
