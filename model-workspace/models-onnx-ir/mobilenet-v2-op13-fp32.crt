module attributes {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-linux-gnu"} {
  func.func @main_graph(%arg0: tensor<1x3x224x224xf32>) -> tensor<1x1000xf32> attributes {input_names = ["input"], output_names = ["output"]} {
    %0 = crt.constant : () -> tensor<1000x1280xf32>
    %1 = crt.constant : () -> tensor<1000xf32>
    %2 = crt.constant : () -> tensor<32x3x3x3xf32>
    %3 = crt.constant : () -> tensor<32xf32>
    %4 = crt.constant : () -> tensor<32x1x3x3xf32>
    %5 = crt.constant : () -> tensor<32xf32>
    %6 = crt.constant : () -> tensor<16x32x1x1xf32>
    %7 = crt.constant : () -> tensor<96x16x1x1xf32>
    %8 = crt.constant : () -> tensor<96x1x3x3xf32>
    %9 = crt.constant : () -> tensor<96xf32>
    %10 = crt.constant : () -> tensor<24x96x1x1xf32>
    %11 = crt.constant : () -> tensor<144x24x1x1xf32>
    %12 = crt.constant : () -> tensor<144x1x3x3xf32>
    %13 = crt.constant : () -> tensor<144xf32>
    %14 = crt.constant : () -> tensor<24x144x1x1xf32>
    %15 = crt.constant : () -> tensor<144x24x1x1xf32>
    %16 = crt.constant : () -> tensor<144x1x3x3xf32>
    %17 = crt.constant : () -> tensor<144xf32>
    %18 = crt.constant : () -> tensor<32x144x1x1xf32>
    %19 = crt.constant : () -> tensor<192x32x1x1xf32>
    %20 = crt.constant : () -> tensor<192x1x3x3xf32>
    %21 = crt.constant : () -> tensor<192xf32>
    %22 = crt.constant : () -> tensor<32x192x1x1xf32>
    %23 = crt.constant : () -> tensor<192x32x1x1xf32>
    %24 = crt.constant : () -> tensor<192x1x3x3xf32>
    %25 = crt.constant : () -> tensor<192xf32>
    %26 = crt.constant : () -> tensor<32x192x1x1xf32>
    %27 = crt.constant : () -> tensor<192x32x1x1xf32>
    %28 = crt.constant : () -> tensor<192x1x3x3xf32>
    %29 = crt.constant : () -> tensor<192xf32>
    %30 = crt.constant : () -> tensor<64x192x1x1xf32>
    %31 = crt.constant : () -> tensor<384x64x1x1xf32>
    %32 = crt.constant : () -> tensor<384x1x3x3xf32>
    %33 = crt.constant : () -> tensor<384xf32>
    %34 = crt.constant : () -> tensor<64x384x1x1xf32>
    %35 = crt.constant : () -> tensor<384x64x1x1xf32>
    %36 = crt.constant : () -> tensor<384x1x3x3xf32>
    %37 = crt.constant : () -> tensor<384xf32>
    %38 = crt.constant : () -> tensor<64x384x1x1xf32>
    %39 = crt.constant : () -> tensor<384x64x1x1xf32>
    %40 = crt.constant : () -> tensor<384x1x3x3xf32>
    %41 = crt.constant : () -> tensor<384xf32>
    %42 = crt.constant : () -> tensor<64x384x1x1xf32>
    %43 = crt.constant : () -> tensor<384x64x1x1xf32>
    %44 = crt.constant : () -> tensor<384x1x3x3xf32>
    %45 = crt.constant : () -> tensor<384xf32>
    %46 = crt.constant : () -> tensor<96x384x1x1xf32>
    %47 = crt.constant : () -> tensor<576x96x1x1xf32>
    %48 = crt.constant : () -> tensor<576x1x3x3xf32>
    %49 = crt.constant : () -> tensor<576xf32>
    %50 = crt.constant : () -> tensor<96x576x1x1xf32>
    %51 = crt.constant : () -> tensor<576x96x1x1xf32>
    %52 = crt.constant : () -> tensor<576x1x3x3xf32>
    %53 = crt.constant : () -> tensor<576xf32>
    %54 = crt.constant : () -> tensor<96x576x1x1xf32>
    %55 = crt.constant : () -> tensor<576x96x1x1xf32>
    %56 = crt.constant : () -> tensor<576x1x3x3xf32>
    %57 = crt.constant : () -> tensor<576xf32>
    %58 = crt.constant : () -> tensor<160x576x1x1xf32>
    %59 = crt.constant : () -> tensor<960x160x1x1xf32>
    %60 = crt.constant : () -> tensor<960x1x3x3xf32>
    %61 = crt.constant : () -> tensor<960xf32>
    %62 = crt.constant : () -> tensor<160x960x1x1xf32>
    %63 = crt.constant : () -> tensor<960x160x1x1xf32>
    %64 = crt.constant : () -> tensor<960x1x3x3xf32>
    %65 = crt.constant : () -> tensor<960xf32>
    %66 = crt.constant : () -> tensor<160x960x1x1xf32>
    %67 = crt.constant : () -> tensor<960x160x1x1xf32>
    %68 = crt.constant : () -> tensor<960x1x3x3xf32>
    %69 = crt.constant : () -> tensor<960xf32>
    %70 = crt.constant : () -> tensor<320x960x1x1xf32>
    %71 = crt.constant : () -> tensor<1280x320x1x1xf32>
    %72 = crt.constant : () -> tensor<f32>
    %73 = crt.constant : () -> tensor<f32>
    %74 = crt.constant : () -> tensor<2xi64>
    %75 = crt.convadd %arg0, %2, %3 : (tensor<1x3x224x224xf32>, tensor<32x3x3x3xf32>, tensor<32xf32>) -> tensor<1x32x112x112xf32>
    %76 = "onnx.Clip"(%75, %72, %73) {onnx_node_name = "Clip_3"} : (tensor<1x32x112x112xf32>, tensor<f32>, tensor<f32>) -> tensor<1x32x112x112xf32>
    %77 = crt.convadd %76, %4, %5 : (tensor<1x32x112x112xf32>, tensor<32x1x3x3xf32>, tensor<32xf32>) -> tensor<1x32x112x112xf32>
    %78 = "onnx.Clip"(%77, %72, %73) {onnx_node_name = "Clip_7"} : (tensor<1x32x112x112xf32>, tensor<f32>, tensor<f32>) -> tensor<1x32x112x112xf32>
    %79 = crt.constant : () -> tensor<3xi64>
    %80 = crt.reshape %78, %79 : (tensor<1x32x112x112xf32>, tensor<3xi64>) -> tensor<1x32x12544xf32>
    %81 = crt.constant : () -> tensor<2xi64>
    %82 = crt.reshape %6, %81 : (tensor<16x32x1x1xf32>, tensor<2xi64>) -> tensor<16x32xf32>
    %83 = "onnx.MatMul"(%82, %80) : (tensor<16x32xf32>, tensor<1x32x12544xf32>) -> tensor<1x16x12544xf32>
    %84 = crt.constant : () -> tensor<1x16x1xf32>
    %85 = crt.add %83, %84 : (tensor<1x16x12544xf32>, tensor<1x16x1xf32>) -> tensor<1x16x12544xf32>
    %86 = crt.constant : () -> tensor<3xi64>
    %87 = crt.reshape %85, %86 : (tensor<1x16x12544xf32>, tensor<3xi64>) -> tensor<1x16x12544xf32>
    %88 = crt.constant : () -> tensor<2xi64>
    %89 = crt.reshape %7, %88 : (tensor<96x16x1x1xf32>, tensor<2xi64>) -> tensor<96x16xf32>
    %90 = "onnx.MatMul"(%89, %87) : (tensor<96x16xf32>, tensor<1x16x12544xf32>) -> tensor<1x96x12544xf32>
    %91 = crt.constant : () -> tensor<1x96x1xf32>
    %92 = crt.add %90, %91 : (tensor<1x96x12544xf32>, tensor<1x96x1xf32>) -> tensor<1x96x12544xf32>
    %93 = crt.constant : () -> tensor<4xi64>
    %94 = crt.reshape %92, %93 : (tensor<1x96x12544xf32>, tensor<4xi64>) -> tensor<1x96x112x112xf32>
    %95 = "onnx.Clip"(%94, %72, %73) {onnx_node_name = "Clip_12"} : (tensor<1x96x112x112xf32>, tensor<f32>, tensor<f32>) -> tensor<1x96x112x112xf32>
    %96 = crt.convadd %95, %8, %9 : (tensor<1x96x112x112xf32>, tensor<96x1x3x3xf32>, tensor<96xf32>) -> tensor<1x96x56x56xf32>
    %97 = "onnx.Clip"(%96, %72, %73) {onnx_node_name = "Clip_16"} : (tensor<1x96x56x56xf32>, tensor<f32>, tensor<f32>) -> tensor<1x96x56x56xf32>
    %98 = crt.constant : () -> tensor<3xi64>
    %99 = crt.reshape %97, %98 : (tensor<1x96x56x56xf32>, tensor<3xi64>) -> tensor<1x96x3136xf32>
    %100 = crt.constant : () -> tensor<2xi64>
    %101 = crt.reshape %10, %100 : (tensor<24x96x1x1xf32>, tensor<2xi64>) -> tensor<24x96xf32>
    %102 = "onnx.MatMul"(%101, %99) : (tensor<24x96xf32>, tensor<1x96x3136xf32>) -> tensor<1x24x3136xf32>
    %103 = crt.constant : () -> tensor<1x24x1xf32>
    %104 = crt.add %102, %103 : (tensor<1x24x3136xf32>, tensor<1x24x1xf32>) -> tensor<1x24x3136xf32>
    %105 = crt.constant : () -> tensor<4xi64>
    %106 = crt.reshape %104, %105 : (tensor<1x24x3136xf32>, tensor<4xi64>) -> tensor<1x24x56x56xf32>
    %107 = crt.constant : () -> tensor<3xi64>
    %108 = crt.reshape %104, %107 : (tensor<1x24x3136xf32>, tensor<3xi64>) -> tensor<1x24x3136xf32>
    %109 = crt.constant : () -> tensor<2xi64>
    %110 = crt.reshape %11, %109 : (tensor<144x24x1x1xf32>, tensor<2xi64>) -> tensor<144x24xf32>
    %111 = "onnx.MatMul"(%110, %108) : (tensor<144x24xf32>, tensor<1x24x3136xf32>) -> tensor<1x144x3136xf32>
    %112 = crt.constant : () -> tensor<1x144x1xf32>
    %113 = crt.add %111, %112 : (tensor<1x144x3136xf32>, tensor<1x144x1xf32>) -> tensor<1x144x3136xf32>
    %114 = crt.constant : () -> tensor<4xi64>
    %115 = crt.reshape %113, %114 : (tensor<1x144x3136xf32>, tensor<4xi64>) -> tensor<1x144x56x56xf32>
    %116 = "onnx.Clip"(%115, %72, %73) {onnx_node_name = "Clip_21"} : (tensor<1x144x56x56xf32>, tensor<f32>, tensor<f32>) -> tensor<1x144x56x56xf32>
    %117 = crt.convadd %116, %12, %13 : (tensor<1x144x56x56xf32>, tensor<144x1x3x3xf32>, tensor<144xf32>) -> tensor<1x144x56x56xf32>
    %118 = "onnx.Clip"(%117, %72, %73) {onnx_node_name = "Clip_25"} : (tensor<1x144x56x56xf32>, tensor<f32>, tensor<f32>) -> tensor<1x144x56x56xf32>
    %119 = crt.constant : () -> tensor<3xi64>
    %120 = crt.reshape %118, %119 : (tensor<1x144x56x56xf32>, tensor<3xi64>) -> tensor<1x144x3136xf32>
    %121 = crt.constant : () -> tensor<2xi64>
    %122 = crt.reshape %14, %121 : (tensor<24x144x1x1xf32>, tensor<2xi64>) -> tensor<24x144xf32>
    %123 = "onnx.MatMul"(%122, %120) : (tensor<24x144xf32>, tensor<1x144x3136xf32>) -> tensor<1x24x3136xf32>
    %124 = crt.constant : () -> tensor<1x24x1xf32>
    %125 = crt.add %123, %124 : (tensor<1x24x3136xf32>, tensor<1x24x1xf32>) -> tensor<1x24x3136xf32>
    %126 = crt.constant : () -> tensor<4xi64>
    %127 = crt.reshape %125, %126 : (tensor<1x24x3136xf32>, tensor<4xi64>) -> tensor<1x24x56x56xf32>
    %128 = crt.add %106, %127 : (tensor<1x24x56x56xf32>, tensor<1x24x56x56xf32>) -> tensor<1x24x56x56xf32>
    %129 = crt.constant : () -> tensor<3xi64>
    %130 = crt.reshape %128, %129 : (tensor<1x24x56x56xf32>, tensor<3xi64>) -> tensor<1x24x3136xf32>
    %131 = crt.constant : () -> tensor<2xi64>
    %132 = crt.reshape %15, %131 : (tensor<144x24x1x1xf32>, tensor<2xi64>) -> tensor<144x24xf32>
    %133 = "onnx.MatMul"(%132, %130) : (tensor<144x24xf32>, tensor<1x24x3136xf32>) -> tensor<1x144x3136xf32>
    %134 = crt.constant : () -> tensor<1x144x1xf32>
    %135 = crt.add %133, %134 : (tensor<1x144x3136xf32>, tensor<1x144x1xf32>) -> tensor<1x144x3136xf32>
    %136 = crt.constant : () -> tensor<4xi64>
    %137 = crt.reshape %135, %136 : (tensor<1x144x3136xf32>, tensor<4xi64>) -> tensor<1x144x56x56xf32>
    %138 = "onnx.Clip"(%137, %72, %73) {onnx_node_name = "Clip_31"} : (tensor<1x144x56x56xf32>, tensor<f32>, tensor<f32>) -> tensor<1x144x56x56xf32>
    %139 = crt.convadd %138, %16, %17 : (tensor<1x144x56x56xf32>, tensor<144x1x3x3xf32>, tensor<144xf32>) -> tensor<1x144x28x28xf32>
    %140 = "onnx.Clip"(%139, %72, %73) {onnx_node_name = "Clip_35"} : (tensor<1x144x28x28xf32>, tensor<f32>, tensor<f32>) -> tensor<1x144x28x28xf32>
    %141 = crt.constant : () -> tensor<3xi64>
    %142 = crt.reshape %140, %141 : (tensor<1x144x28x28xf32>, tensor<3xi64>) -> tensor<1x144x784xf32>
    %143 = crt.constant : () -> tensor<2xi64>
    %144 = crt.reshape %18, %143 : (tensor<32x144x1x1xf32>, tensor<2xi64>) -> tensor<32x144xf32>
    %145 = "onnx.MatMul"(%144, %142) : (tensor<32x144xf32>, tensor<1x144x784xf32>) -> tensor<1x32x784xf32>
    %146 = crt.constant : () -> tensor<1x32x1xf32>
    %147 = crt.add %145, %146 : (tensor<1x32x784xf32>, tensor<1x32x1xf32>) -> tensor<1x32x784xf32>
    %148 = crt.constant : () -> tensor<4xi64>
    %149 = crt.reshape %147, %148 : (tensor<1x32x784xf32>, tensor<4xi64>) -> tensor<1x32x28x28xf32>
    %150 = crt.constant : () -> tensor<3xi64>
    %151 = crt.reshape %147, %150 : (tensor<1x32x784xf32>, tensor<3xi64>) -> tensor<1x32x784xf32>
    %152 = crt.constant : () -> tensor<2xi64>
    %153 = crt.reshape %19, %152 : (tensor<192x32x1x1xf32>, tensor<2xi64>) -> tensor<192x32xf32>
    %154 = "onnx.MatMul"(%153, %151) : (tensor<192x32xf32>, tensor<1x32x784xf32>) -> tensor<1x192x784xf32>
    %155 = crt.constant : () -> tensor<1x192x1xf32>
    %156 = crt.add %154, %155 : (tensor<1x192x784xf32>, tensor<1x192x1xf32>) -> tensor<1x192x784xf32>
    %157 = crt.constant : () -> tensor<4xi64>
    %158 = crt.reshape %156, %157 : (tensor<1x192x784xf32>, tensor<4xi64>) -> tensor<1x192x28x28xf32>
    %159 = "onnx.Clip"(%158, %72, %73) {onnx_node_name = "Clip_40"} : (tensor<1x192x28x28xf32>, tensor<f32>, tensor<f32>) -> tensor<1x192x28x28xf32>
    %160 = crt.convadd %159, %20, %21 : (tensor<1x192x28x28xf32>, tensor<192x1x3x3xf32>, tensor<192xf32>) -> tensor<1x192x28x28xf32>
    %161 = "onnx.Clip"(%160, %72, %73) {onnx_node_name = "Clip_44"} : (tensor<1x192x28x28xf32>, tensor<f32>, tensor<f32>) -> tensor<1x192x28x28xf32>
    %162 = crt.constant : () -> tensor<3xi64>
    %163 = crt.reshape %161, %162 : (tensor<1x192x28x28xf32>, tensor<3xi64>) -> tensor<1x192x784xf32>
    %164 = crt.constant : () -> tensor<2xi64>
    %165 = crt.reshape %22, %164 : (tensor<32x192x1x1xf32>, tensor<2xi64>) -> tensor<32x192xf32>
    %166 = "onnx.MatMul"(%165, %163) : (tensor<32x192xf32>, tensor<1x192x784xf32>) -> tensor<1x32x784xf32>
    %167 = crt.constant : () -> tensor<1x32x1xf32>
    %168 = crt.add %166, %167 : (tensor<1x32x784xf32>, tensor<1x32x1xf32>) -> tensor<1x32x784xf32>
    %169 = crt.constant : () -> tensor<4xi64>
    %170 = crt.reshape %168, %169 : (tensor<1x32x784xf32>, tensor<4xi64>) -> tensor<1x32x28x28xf32>
    %171 = crt.add %149, %170 : (tensor<1x32x28x28xf32>, tensor<1x32x28x28xf32>) -> tensor<1x32x28x28xf32>
    %172 = crt.constant : () -> tensor<3xi64>
    %173 = crt.reshape %171, %172 : (tensor<1x32x28x28xf32>, tensor<3xi64>) -> tensor<1x32x784xf32>
    %174 = crt.constant : () -> tensor<2xi64>
    %175 = crt.reshape %23, %174 : (tensor<192x32x1x1xf32>, tensor<2xi64>) -> tensor<192x32xf32>
    %176 = "onnx.MatMul"(%175, %173) : (tensor<192x32xf32>, tensor<1x32x784xf32>) -> tensor<1x192x784xf32>
    %177 = crt.constant : () -> tensor<1x192x1xf32>
    %178 = crt.add %176, %177 : (tensor<1x192x784xf32>, tensor<1x192x1xf32>) -> tensor<1x192x784xf32>
    %179 = crt.constant : () -> tensor<4xi64>
    %180 = crt.reshape %178, %179 : (tensor<1x192x784xf32>, tensor<4xi64>) -> tensor<1x192x28x28xf32>
    %181 = "onnx.Clip"(%180, %72, %73) {onnx_node_name = "Clip_50"} : (tensor<1x192x28x28xf32>, tensor<f32>, tensor<f32>) -> tensor<1x192x28x28xf32>
    %182 = crt.convadd %181, %24, %25 : (tensor<1x192x28x28xf32>, tensor<192x1x3x3xf32>, tensor<192xf32>) -> tensor<1x192x28x28xf32>
    %183 = "onnx.Clip"(%182, %72, %73) {onnx_node_name = "Clip_54"} : (tensor<1x192x28x28xf32>, tensor<f32>, tensor<f32>) -> tensor<1x192x28x28xf32>
    %184 = crt.constant : () -> tensor<3xi64>
    %185 = crt.reshape %183, %184 : (tensor<1x192x28x28xf32>, tensor<3xi64>) -> tensor<1x192x784xf32>
    %186 = crt.constant : () -> tensor<2xi64>
    %187 = crt.reshape %26, %186 : (tensor<32x192x1x1xf32>, tensor<2xi64>) -> tensor<32x192xf32>
    %188 = "onnx.MatMul"(%187, %185) : (tensor<32x192xf32>, tensor<1x192x784xf32>) -> tensor<1x32x784xf32>
    %189 = crt.constant : () -> tensor<1x32x1xf32>
    %190 = crt.add %188, %189 : (tensor<1x32x784xf32>, tensor<1x32x1xf32>) -> tensor<1x32x784xf32>
    %191 = crt.constant : () -> tensor<4xi64>
    %192 = crt.reshape %190, %191 : (tensor<1x32x784xf32>, tensor<4xi64>) -> tensor<1x32x28x28xf32>
    %193 = crt.add %171, %192 : (tensor<1x32x28x28xf32>, tensor<1x32x28x28xf32>) -> tensor<1x32x28x28xf32>
    %194 = crt.constant : () -> tensor<3xi64>
    %195 = crt.reshape %193, %194 : (tensor<1x32x28x28xf32>, tensor<3xi64>) -> tensor<1x32x784xf32>
    %196 = crt.constant : () -> tensor<2xi64>
    %197 = crt.reshape %27, %196 : (tensor<192x32x1x1xf32>, tensor<2xi64>) -> tensor<192x32xf32>
    %198 = "onnx.MatMul"(%197, %195) : (tensor<192x32xf32>, tensor<1x32x784xf32>) -> tensor<1x192x784xf32>
    %199 = crt.constant : () -> tensor<1x192x1xf32>
    %200 = crt.add %198, %199 : (tensor<1x192x784xf32>, tensor<1x192x1xf32>) -> tensor<1x192x784xf32>
    %201 = crt.constant : () -> tensor<4xi64>
    %202 = crt.reshape %200, %201 : (tensor<1x192x784xf32>, tensor<4xi64>) -> tensor<1x192x28x28xf32>
    %203 = "onnx.Clip"(%202, %72, %73) {onnx_node_name = "Clip_60"} : (tensor<1x192x28x28xf32>, tensor<f32>, tensor<f32>) -> tensor<1x192x28x28xf32>
    %204 = crt.convadd %203, %28, %29 : (tensor<1x192x28x28xf32>, tensor<192x1x3x3xf32>, tensor<192xf32>) -> tensor<1x192x14x14xf32>
    %205 = "onnx.Clip"(%204, %72, %73) {onnx_node_name = "Clip_64"} : (tensor<1x192x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x192x14x14xf32>
    %206 = crt.constant : () -> tensor<3xi64>
    %207 = crt.reshape %205, %206 : (tensor<1x192x14x14xf32>, tensor<3xi64>) -> tensor<1x192x196xf32>
    %208 = crt.constant : () -> tensor<2xi64>
    %209 = crt.reshape %30, %208 : (tensor<64x192x1x1xf32>, tensor<2xi64>) -> tensor<64x192xf32>
    %210 = "onnx.MatMul"(%209, %207) : (tensor<64x192xf32>, tensor<1x192x196xf32>) -> tensor<1x64x196xf32>
    %211 = crt.constant : () -> tensor<1x64x1xf32>
    %212 = crt.add %210, %211 : (tensor<1x64x196xf32>, tensor<1x64x1xf32>) -> tensor<1x64x196xf32>
    %213 = crt.constant : () -> tensor<4xi64>
    %214 = crt.reshape %212, %213 : (tensor<1x64x196xf32>, tensor<4xi64>) -> tensor<1x64x14x14xf32>
    %215 = crt.constant : () -> tensor<3xi64>
    %216 = crt.reshape %212, %215 : (tensor<1x64x196xf32>, tensor<3xi64>) -> tensor<1x64x196xf32>
    %217 = crt.constant : () -> tensor<2xi64>
    %218 = crt.reshape %31, %217 : (tensor<384x64x1x1xf32>, tensor<2xi64>) -> tensor<384x64xf32>
    %219 = "onnx.MatMul"(%218, %216) : (tensor<384x64xf32>, tensor<1x64x196xf32>) -> tensor<1x384x196xf32>
    %220 = crt.constant : () -> tensor<1x384x1xf32>
    %221 = crt.add %219, %220 : (tensor<1x384x196xf32>, tensor<1x384x1xf32>) -> tensor<1x384x196xf32>
    %222 = crt.constant : () -> tensor<4xi64>
    %223 = crt.reshape %221, %222 : (tensor<1x384x196xf32>, tensor<4xi64>) -> tensor<1x384x14x14xf32>
    %224 = "onnx.Clip"(%223, %72, %73) {onnx_node_name = "Clip_69"} : (tensor<1x384x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x384x14x14xf32>
    %225 = crt.convadd %224, %32, %33 : (tensor<1x384x14x14xf32>, tensor<384x1x3x3xf32>, tensor<384xf32>) -> tensor<1x384x14x14xf32>
    %226 = "onnx.Clip"(%225, %72, %73) {onnx_node_name = "Clip_73"} : (tensor<1x384x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x384x14x14xf32>
    %227 = crt.constant : () -> tensor<3xi64>
    %228 = crt.reshape %226, %227 : (tensor<1x384x14x14xf32>, tensor<3xi64>) -> tensor<1x384x196xf32>
    %229 = crt.constant : () -> tensor<2xi64>
    %230 = crt.reshape %34, %229 : (tensor<64x384x1x1xf32>, tensor<2xi64>) -> tensor<64x384xf32>
    %231 = "onnx.MatMul"(%230, %228) : (tensor<64x384xf32>, tensor<1x384x196xf32>) -> tensor<1x64x196xf32>
    %232 = crt.constant : () -> tensor<1x64x1xf32>
    %233 = crt.add %231, %232 : (tensor<1x64x196xf32>, tensor<1x64x1xf32>) -> tensor<1x64x196xf32>
    %234 = crt.constant : () -> tensor<4xi64>
    %235 = crt.reshape %233, %234 : (tensor<1x64x196xf32>, tensor<4xi64>) -> tensor<1x64x14x14xf32>
    %236 = crt.add %214, %235 : (tensor<1x64x14x14xf32>, tensor<1x64x14x14xf32>) -> tensor<1x64x14x14xf32>
    %237 = crt.constant : () -> tensor<3xi64>
    %238 = crt.reshape %236, %237 : (tensor<1x64x14x14xf32>, tensor<3xi64>) -> tensor<1x64x196xf32>
    %239 = crt.constant : () -> tensor<2xi64>
    %240 = crt.reshape %35, %239 : (tensor<384x64x1x1xf32>, tensor<2xi64>) -> tensor<384x64xf32>
    %241 = "onnx.MatMul"(%240, %238) : (tensor<384x64xf32>, tensor<1x64x196xf32>) -> tensor<1x384x196xf32>
    %242 = crt.constant : () -> tensor<1x384x1xf32>
    %243 = crt.add %241, %242 : (tensor<1x384x196xf32>, tensor<1x384x1xf32>) -> tensor<1x384x196xf32>
    %244 = crt.constant : () -> tensor<4xi64>
    %245 = crt.reshape %243, %244 : (tensor<1x384x196xf32>, tensor<4xi64>) -> tensor<1x384x14x14xf32>
    %246 = "onnx.Clip"(%245, %72, %73) {onnx_node_name = "Clip_79"} : (tensor<1x384x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x384x14x14xf32>
    %247 = crt.convadd %246, %36, %37 : (tensor<1x384x14x14xf32>, tensor<384x1x3x3xf32>, tensor<384xf32>) -> tensor<1x384x14x14xf32>
    %248 = "onnx.Clip"(%247, %72, %73) {onnx_node_name = "Clip_83"} : (tensor<1x384x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x384x14x14xf32>
    %249 = crt.constant : () -> tensor<3xi64>
    %250 = crt.reshape %248, %249 : (tensor<1x384x14x14xf32>, tensor<3xi64>) -> tensor<1x384x196xf32>
    %251 = crt.constant : () -> tensor<2xi64>
    %252 = crt.reshape %38, %251 : (tensor<64x384x1x1xf32>, tensor<2xi64>) -> tensor<64x384xf32>
    %253 = "onnx.MatMul"(%252, %250) : (tensor<64x384xf32>, tensor<1x384x196xf32>) -> tensor<1x64x196xf32>
    %254 = crt.constant : () -> tensor<1x64x1xf32>
    %255 = crt.add %253, %254 : (tensor<1x64x196xf32>, tensor<1x64x1xf32>) -> tensor<1x64x196xf32>
    %256 = crt.constant : () -> tensor<4xi64>
    %257 = crt.reshape %255, %256 : (tensor<1x64x196xf32>, tensor<4xi64>) -> tensor<1x64x14x14xf32>
    %258 = crt.add %236, %257 : (tensor<1x64x14x14xf32>, tensor<1x64x14x14xf32>) -> tensor<1x64x14x14xf32>
    %259 = crt.constant : () -> tensor<3xi64>
    %260 = crt.reshape %258, %259 : (tensor<1x64x14x14xf32>, tensor<3xi64>) -> tensor<1x64x196xf32>
    %261 = crt.constant : () -> tensor<2xi64>
    %262 = crt.reshape %39, %261 : (tensor<384x64x1x1xf32>, tensor<2xi64>) -> tensor<384x64xf32>
    %263 = "onnx.MatMul"(%262, %260) : (tensor<384x64xf32>, tensor<1x64x196xf32>) -> tensor<1x384x196xf32>
    %264 = crt.constant : () -> tensor<1x384x1xf32>
    %265 = crt.add %263, %264 : (tensor<1x384x196xf32>, tensor<1x384x1xf32>) -> tensor<1x384x196xf32>
    %266 = crt.constant : () -> tensor<4xi64>
    %267 = crt.reshape %265, %266 : (tensor<1x384x196xf32>, tensor<4xi64>) -> tensor<1x384x14x14xf32>
    %268 = "onnx.Clip"(%267, %72, %73) {onnx_node_name = "Clip_89"} : (tensor<1x384x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x384x14x14xf32>
    %269 = crt.convadd %268, %40, %41 : (tensor<1x384x14x14xf32>, tensor<384x1x3x3xf32>, tensor<384xf32>) -> tensor<1x384x14x14xf32>
    %270 = "onnx.Clip"(%269, %72, %73) {onnx_node_name = "Clip_93"} : (tensor<1x384x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x384x14x14xf32>
    %271 = crt.constant : () -> tensor<3xi64>
    %272 = crt.reshape %270, %271 : (tensor<1x384x14x14xf32>, tensor<3xi64>) -> tensor<1x384x196xf32>
    %273 = crt.constant : () -> tensor<2xi64>
    %274 = crt.reshape %42, %273 : (tensor<64x384x1x1xf32>, tensor<2xi64>) -> tensor<64x384xf32>
    %275 = "onnx.MatMul"(%274, %272) : (tensor<64x384xf32>, tensor<1x384x196xf32>) -> tensor<1x64x196xf32>
    %276 = crt.constant : () -> tensor<1x64x1xf32>
    %277 = crt.add %275, %276 : (tensor<1x64x196xf32>, tensor<1x64x1xf32>) -> tensor<1x64x196xf32>
    %278 = crt.constant : () -> tensor<4xi64>
    %279 = crt.reshape %277, %278 : (tensor<1x64x196xf32>, tensor<4xi64>) -> tensor<1x64x14x14xf32>
    %280 = crt.add %258, %279 : (tensor<1x64x14x14xf32>, tensor<1x64x14x14xf32>) -> tensor<1x64x14x14xf32>
    %281 = crt.constant : () -> tensor<3xi64>
    %282 = crt.reshape %280, %281 : (tensor<1x64x14x14xf32>, tensor<3xi64>) -> tensor<1x64x196xf32>
    %283 = crt.constant : () -> tensor<2xi64>
    %284 = crt.reshape %43, %283 : (tensor<384x64x1x1xf32>, tensor<2xi64>) -> tensor<384x64xf32>
    %285 = "onnx.MatMul"(%284, %282) : (tensor<384x64xf32>, tensor<1x64x196xf32>) -> tensor<1x384x196xf32>
    %286 = crt.constant : () -> tensor<1x384x1xf32>
    %287 = crt.add %285, %286 : (tensor<1x384x196xf32>, tensor<1x384x1xf32>) -> tensor<1x384x196xf32>
    %288 = crt.constant : () -> tensor<4xi64>
    %289 = crt.reshape %287, %288 : (tensor<1x384x196xf32>, tensor<4xi64>) -> tensor<1x384x14x14xf32>
    %290 = "onnx.Clip"(%289, %72, %73) {onnx_node_name = "Clip_99"} : (tensor<1x384x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x384x14x14xf32>
    %291 = crt.convadd %290, %44, %45 : (tensor<1x384x14x14xf32>, tensor<384x1x3x3xf32>, tensor<384xf32>) -> tensor<1x384x14x14xf32>
    %292 = "onnx.Clip"(%291, %72, %73) {onnx_node_name = "Clip_103"} : (tensor<1x384x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x384x14x14xf32>
    %293 = crt.constant : () -> tensor<3xi64>
    %294 = crt.reshape %292, %293 : (tensor<1x384x14x14xf32>, tensor<3xi64>) -> tensor<1x384x196xf32>
    %295 = crt.constant : () -> tensor<2xi64>
    %296 = crt.reshape %46, %295 : (tensor<96x384x1x1xf32>, tensor<2xi64>) -> tensor<96x384xf32>
    %297 = "onnx.MatMul"(%296, %294) : (tensor<96x384xf32>, tensor<1x384x196xf32>) -> tensor<1x96x196xf32>
    %298 = crt.constant : () -> tensor<1x96x1xf32>
    %299 = crt.add %297, %298 : (tensor<1x96x196xf32>, tensor<1x96x1xf32>) -> tensor<1x96x196xf32>
    %300 = crt.constant : () -> tensor<4xi64>
    %301 = crt.reshape %299, %300 : (tensor<1x96x196xf32>, tensor<4xi64>) -> tensor<1x96x14x14xf32>
    %302 = crt.constant : () -> tensor<3xi64>
    %303 = crt.reshape %299, %302 : (tensor<1x96x196xf32>, tensor<3xi64>) -> tensor<1x96x196xf32>
    %304 = crt.constant : () -> tensor<2xi64>
    %305 = crt.reshape %47, %304 : (tensor<576x96x1x1xf32>, tensor<2xi64>) -> tensor<576x96xf32>
    %306 = "onnx.MatMul"(%305, %303) : (tensor<576x96xf32>, tensor<1x96x196xf32>) -> tensor<1x576x196xf32>
    %307 = crt.constant : () -> tensor<1x576x1xf32>
    %308 = crt.add %306, %307 : (tensor<1x576x196xf32>, tensor<1x576x1xf32>) -> tensor<1x576x196xf32>
    %309 = crt.constant : () -> tensor<4xi64>
    %310 = crt.reshape %308, %309 : (tensor<1x576x196xf32>, tensor<4xi64>) -> tensor<1x576x14x14xf32>
    %311 = "onnx.Clip"(%310, %72, %73) {onnx_node_name = "Clip_108"} : (tensor<1x576x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x576x14x14xf32>
    %312 = crt.convadd %311, %48, %49 : (tensor<1x576x14x14xf32>, tensor<576x1x3x3xf32>, tensor<576xf32>) -> tensor<1x576x14x14xf32>
    %313 = "onnx.Clip"(%312, %72, %73) {onnx_node_name = "Clip_112"} : (tensor<1x576x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x576x14x14xf32>
    %314 = crt.constant : () -> tensor<3xi64>
    %315 = crt.reshape %313, %314 : (tensor<1x576x14x14xf32>, tensor<3xi64>) -> tensor<1x576x196xf32>
    %316 = crt.constant : () -> tensor<2xi64>
    %317 = crt.reshape %50, %316 : (tensor<96x576x1x1xf32>, tensor<2xi64>) -> tensor<96x576xf32>
    %318 = "onnx.MatMul"(%317, %315) : (tensor<96x576xf32>, tensor<1x576x196xf32>) -> tensor<1x96x196xf32>
    %319 = crt.constant : () -> tensor<1x96x1xf32>
    %320 = crt.add %318, %319 : (tensor<1x96x196xf32>, tensor<1x96x1xf32>) -> tensor<1x96x196xf32>
    %321 = crt.constant : () -> tensor<4xi64>
    %322 = crt.reshape %320, %321 : (tensor<1x96x196xf32>, tensor<4xi64>) -> tensor<1x96x14x14xf32>
    %323 = crt.add %301, %322 : (tensor<1x96x14x14xf32>, tensor<1x96x14x14xf32>) -> tensor<1x96x14x14xf32>
    %324 = crt.constant : () -> tensor<3xi64>
    %325 = crt.reshape %323, %324 : (tensor<1x96x14x14xf32>, tensor<3xi64>) -> tensor<1x96x196xf32>
    %326 = crt.constant : () -> tensor<2xi64>
    %327 = crt.reshape %51, %326 : (tensor<576x96x1x1xf32>, tensor<2xi64>) -> tensor<576x96xf32>
    %328 = "onnx.MatMul"(%327, %325) : (tensor<576x96xf32>, tensor<1x96x196xf32>) -> tensor<1x576x196xf32>
    %329 = crt.constant : () -> tensor<1x576x1xf32>
    %330 = crt.add %328, %329 : (tensor<1x576x196xf32>, tensor<1x576x1xf32>) -> tensor<1x576x196xf32>
    %331 = crt.constant : () -> tensor<4xi64>
    %332 = crt.reshape %330, %331 : (tensor<1x576x196xf32>, tensor<4xi64>) -> tensor<1x576x14x14xf32>
    %333 = "onnx.Clip"(%332, %72, %73) {onnx_node_name = "Clip_118"} : (tensor<1x576x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x576x14x14xf32>
    %334 = crt.convadd %333, %52, %53 : (tensor<1x576x14x14xf32>, tensor<576x1x3x3xf32>, tensor<576xf32>) -> tensor<1x576x14x14xf32>
    %335 = "onnx.Clip"(%334, %72, %73) {onnx_node_name = "Clip_122"} : (tensor<1x576x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x576x14x14xf32>
    %336 = crt.constant : () -> tensor<3xi64>
    %337 = crt.reshape %335, %336 : (tensor<1x576x14x14xf32>, tensor<3xi64>) -> tensor<1x576x196xf32>
    %338 = crt.constant : () -> tensor<2xi64>
    %339 = crt.reshape %54, %338 : (tensor<96x576x1x1xf32>, tensor<2xi64>) -> tensor<96x576xf32>
    %340 = "onnx.MatMul"(%339, %337) : (tensor<96x576xf32>, tensor<1x576x196xf32>) -> tensor<1x96x196xf32>
    %341 = crt.constant : () -> tensor<1x96x1xf32>
    %342 = crt.add %340, %341 : (tensor<1x96x196xf32>, tensor<1x96x1xf32>) -> tensor<1x96x196xf32>
    %343 = crt.constant : () -> tensor<4xi64>
    %344 = crt.reshape %342, %343 : (tensor<1x96x196xf32>, tensor<4xi64>) -> tensor<1x96x14x14xf32>
    %345 = crt.add %323, %344 : (tensor<1x96x14x14xf32>, tensor<1x96x14x14xf32>) -> tensor<1x96x14x14xf32>
    %346 = crt.constant : () -> tensor<3xi64>
    %347 = crt.reshape %345, %346 : (tensor<1x96x14x14xf32>, tensor<3xi64>) -> tensor<1x96x196xf32>
    %348 = crt.constant : () -> tensor<2xi64>
    %349 = crt.reshape %55, %348 : (tensor<576x96x1x1xf32>, tensor<2xi64>) -> tensor<576x96xf32>
    %350 = "onnx.MatMul"(%349, %347) : (tensor<576x96xf32>, tensor<1x96x196xf32>) -> tensor<1x576x196xf32>
    %351 = crt.constant : () -> tensor<1x576x1xf32>
    %352 = crt.add %350, %351 : (tensor<1x576x196xf32>, tensor<1x576x1xf32>) -> tensor<1x576x196xf32>
    %353 = crt.constant : () -> tensor<4xi64>
    %354 = crt.reshape %352, %353 : (tensor<1x576x196xf32>, tensor<4xi64>) -> tensor<1x576x14x14xf32>
    %355 = "onnx.Clip"(%354, %72, %73) {onnx_node_name = "Clip_128"} : (tensor<1x576x14x14xf32>, tensor<f32>, tensor<f32>) -> tensor<1x576x14x14xf32>
    %356 = crt.convadd %355, %56, %57 : (tensor<1x576x14x14xf32>, tensor<576x1x3x3xf32>, tensor<576xf32>) -> tensor<1x576x7x7xf32>
    %357 = "onnx.Clip"(%356, %72, %73) {onnx_node_name = "Clip_132"} : (tensor<1x576x7x7xf32>, tensor<f32>, tensor<f32>) -> tensor<1x576x7x7xf32>
    %358 = crt.constant : () -> tensor<3xi64>
    %359 = crt.reshape %357, %358 : (tensor<1x576x7x7xf32>, tensor<3xi64>) -> tensor<1x576x49xf32>
    %360 = crt.constant : () -> tensor<2xi64>
    %361 = crt.reshape %58, %360 : (tensor<160x576x1x1xf32>, tensor<2xi64>) -> tensor<160x576xf32>
    %362 = "onnx.MatMul"(%361, %359) : (tensor<160x576xf32>, tensor<1x576x49xf32>) -> tensor<1x160x49xf32>
    %363 = crt.constant : () -> tensor<1x160x1xf32>
    %364 = crt.add %362, %363 : (tensor<1x160x49xf32>, tensor<1x160x1xf32>) -> tensor<1x160x49xf32>
    %365 = crt.constant : () -> tensor<4xi64>
    %366 = crt.reshape %364, %365 : (tensor<1x160x49xf32>, tensor<4xi64>) -> tensor<1x160x7x7xf32>
    %367 = crt.constant : () -> tensor<3xi64>
    %368 = crt.reshape %364, %367 : (tensor<1x160x49xf32>, tensor<3xi64>) -> tensor<1x160x49xf32>
    %369 = crt.constant : () -> tensor<2xi64>
    %370 = crt.reshape %59, %369 : (tensor<960x160x1x1xf32>, tensor<2xi64>) -> tensor<960x160xf32>
    %371 = "onnx.MatMul"(%370, %368) : (tensor<960x160xf32>, tensor<1x160x49xf32>) -> tensor<1x960x49xf32>
    %372 = crt.constant : () -> tensor<1x960x1xf32>
    %373 = crt.add %371, %372 : (tensor<1x960x49xf32>, tensor<1x960x1xf32>) -> tensor<1x960x49xf32>
    %374 = crt.constant : () -> tensor<4xi64>
    %375 = crt.reshape %373, %374 : (tensor<1x960x49xf32>, tensor<4xi64>) -> tensor<1x960x7x7xf32>
    %376 = "onnx.Clip"(%375, %72, %73) {onnx_node_name = "Clip_137"} : (tensor<1x960x7x7xf32>, tensor<f32>, tensor<f32>) -> tensor<1x960x7x7xf32>
    %377 = crt.convadd %376, %60, %61 : (tensor<1x960x7x7xf32>, tensor<960x1x3x3xf32>, tensor<960xf32>) -> tensor<1x960x7x7xf32>
    %378 = "onnx.Clip"(%377, %72, %73) {onnx_node_name = "Clip_141"} : (tensor<1x960x7x7xf32>, tensor<f32>, tensor<f32>) -> tensor<1x960x7x7xf32>
    %379 = crt.constant : () -> tensor<3xi64>
    %380 = crt.reshape %378, %379 : (tensor<1x960x7x7xf32>, tensor<3xi64>) -> tensor<1x960x49xf32>
    %381 = crt.constant : () -> tensor<2xi64>
    %382 = crt.reshape %62, %381 : (tensor<160x960x1x1xf32>, tensor<2xi64>) -> tensor<160x960xf32>
    %383 = "onnx.MatMul"(%382, %380) : (tensor<160x960xf32>, tensor<1x960x49xf32>) -> tensor<1x160x49xf32>
    %384 = crt.constant : () -> tensor<1x160x1xf32>
    %385 = crt.add %383, %384 : (tensor<1x160x49xf32>, tensor<1x160x1xf32>) -> tensor<1x160x49xf32>
    %386 = crt.constant : () -> tensor<4xi64>
    %387 = crt.reshape %385, %386 : (tensor<1x160x49xf32>, tensor<4xi64>) -> tensor<1x160x7x7xf32>
    %388 = crt.add %366, %387 : (tensor<1x160x7x7xf32>, tensor<1x160x7x7xf32>) -> tensor<1x160x7x7xf32>
    %389 = crt.constant : () -> tensor<3xi64>
    %390 = crt.reshape %388, %389 : (tensor<1x160x7x7xf32>, tensor<3xi64>) -> tensor<1x160x49xf32>
    %391 = crt.constant : () -> tensor<2xi64>
    %392 = crt.reshape %63, %391 : (tensor<960x160x1x1xf32>, tensor<2xi64>) -> tensor<960x160xf32>
    %393 = "onnx.MatMul"(%392, %390) : (tensor<960x160xf32>, tensor<1x160x49xf32>) -> tensor<1x960x49xf32>
    %394 = crt.constant : () -> tensor<1x960x1xf32>
    %395 = crt.add %393, %394 : (tensor<1x960x49xf32>, tensor<1x960x1xf32>) -> tensor<1x960x49xf32>
    %396 = crt.constant : () -> tensor<4xi64>
    %397 = crt.reshape %395, %396 : (tensor<1x960x49xf32>, tensor<4xi64>) -> tensor<1x960x7x7xf32>
    %398 = "onnx.Clip"(%397, %72, %73) {onnx_node_name = "Clip_147"} : (tensor<1x960x7x7xf32>, tensor<f32>, tensor<f32>) -> tensor<1x960x7x7xf32>
    %399 = crt.convadd %398, %64, %65 : (tensor<1x960x7x7xf32>, tensor<960x1x3x3xf32>, tensor<960xf32>) -> tensor<1x960x7x7xf32>
    %400 = "onnx.Clip"(%399, %72, %73) {onnx_node_name = "Clip_151"} : (tensor<1x960x7x7xf32>, tensor<f32>, tensor<f32>) -> tensor<1x960x7x7xf32>
    %401 = crt.constant : () -> tensor<3xi64>
    %402 = crt.reshape %400, %401 : (tensor<1x960x7x7xf32>, tensor<3xi64>) -> tensor<1x960x49xf32>
    %403 = crt.constant : () -> tensor<2xi64>
    %404 = crt.reshape %66, %403 : (tensor<160x960x1x1xf32>, tensor<2xi64>) -> tensor<160x960xf32>
    %405 = "onnx.MatMul"(%404, %402) : (tensor<160x960xf32>, tensor<1x960x49xf32>) -> tensor<1x160x49xf32>
    %406 = crt.constant : () -> tensor<1x160x1xf32>
    %407 = crt.add %405, %406 : (tensor<1x160x49xf32>, tensor<1x160x1xf32>) -> tensor<1x160x49xf32>
    %408 = crt.constant : () -> tensor<4xi64>
    %409 = crt.reshape %407, %408 : (tensor<1x160x49xf32>, tensor<4xi64>) -> tensor<1x160x7x7xf32>
    %410 = crt.add %388, %409 : (tensor<1x160x7x7xf32>, tensor<1x160x7x7xf32>) -> tensor<1x160x7x7xf32>
    %411 = crt.constant : () -> tensor<3xi64>
    %412 = crt.reshape %410, %411 : (tensor<1x160x7x7xf32>, tensor<3xi64>) -> tensor<1x160x49xf32>
    %413 = crt.constant : () -> tensor<2xi64>
    %414 = crt.reshape %67, %413 : (tensor<960x160x1x1xf32>, tensor<2xi64>) -> tensor<960x160xf32>
    %415 = "onnx.MatMul"(%414, %412) : (tensor<960x160xf32>, tensor<1x160x49xf32>) -> tensor<1x960x49xf32>
    %416 = crt.constant : () -> tensor<1x960x1xf32>
    %417 = crt.add %415, %416 : (tensor<1x960x49xf32>, tensor<1x960x1xf32>) -> tensor<1x960x49xf32>
    %418 = crt.constant : () -> tensor<4xi64>
    %419 = crt.reshape %417, %418 : (tensor<1x960x49xf32>, tensor<4xi64>) -> tensor<1x960x7x7xf32>
    %420 = "onnx.Clip"(%419, %72, %73) {onnx_node_name = "Clip_157"} : (tensor<1x960x7x7xf32>, tensor<f32>, tensor<f32>) -> tensor<1x960x7x7xf32>
    %421 = crt.convadd %420, %68, %69 : (tensor<1x960x7x7xf32>, tensor<960x1x3x3xf32>, tensor<960xf32>) -> tensor<1x960x7x7xf32>
    %422 = "onnx.Clip"(%421, %72, %73) {onnx_node_name = "Clip_161"} : (tensor<1x960x7x7xf32>, tensor<f32>, tensor<f32>) -> tensor<1x960x7x7xf32>
    %423 = crt.constant : () -> tensor<3xi64>
    %424 = crt.reshape %422, %423 : (tensor<1x960x7x7xf32>, tensor<3xi64>) -> tensor<1x960x49xf32>
    %425 = crt.constant : () -> tensor<2xi64>
    %426 = crt.reshape %70, %425 : (tensor<320x960x1x1xf32>, tensor<2xi64>) -> tensor<320x960xf32>
    %427 = "onnx.MatMul"(%426, %424) : (tensor<320x960xf32>, tensor<1x960x49xf32>) -> tensor<1x320x49xf32>
    %428 = crt.constant : () -> tensor<1x320x1xf32>
    %429 = crt.add %427, %428 : (tensor<1x320x49xf32>, tensor<1x320x1xf32>) -> tensor<1x320x49xf32>
    %430 = crt.constant : () -> tensor<3xi64>
    %431 = crt.reshape %429, %430 : (tensor<1x320x49xf32>, tensor<3xi64>) -> tensor<1x320x49xf32>
    %432 = crt.constant : () -> tensor<2xi64>
    %433 = crt.reshape %71, %432 : (tensor<1280x320x1x1xf32>, tensor<2xi64>) -> tensor<1280x320xf32>
    %434 = "onnx.MatMul"(%433, %431) : (tensor<1280x320xf32>, tensor<1x320x49xf32>) -> tensor<1x1280x49xf32>
    %435 = crt.constant : () -> tensor<1x1280x1xf32>
    %436 = crt.add %434, %435 : (tensor<1x1280x49xf32>, tensor<1x1280x1xf32>) -> tensor<1x1280x49xf32>
    %437 = crt.constant : () -> tensor<4xi64>
    %438 = crt.reshape %436, %437 : (tensor<1x1280x49xf32>, tensor<4xi64>) -> tensor<1x1280x7x7xf32>
    %439 = "onnx.Clip"(%438, %72, %73) {onnx_node_name = "Clip_166"} : (tensor<1x1280x7x7xf32>, tensor<f32>, tensor<f32>) -> tensor<1x1280x7x7xf32>
    %440 = crt.reducemean %439 : (tensor<1x1280x7x7xf32>) -> tensor<1x1280x1x1xf32>
    %441 = crt.reshape %440, %74 : (tensor<1x1280x1x1xf32>, tensor<2xi64>) -> tensor<1x1280xf32>
    %442 = crt.gemm %441, %0, %1 : (tensor<1x1280xf32>, tensor<1000x1280xf32>, tensor<1000xf32>) -> tensor<1x1000xf32>
    return %442 : tensor<1x1000xf32>
  }
  "onnx.EntryPoint"() {func = @main_graph} : () -> ()
}
