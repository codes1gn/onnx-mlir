module attributes {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-linux-gnu"} {
  func.func @main_graph(%arg0: tensor<1x384xi64>, %arg1: tensor<1x384xi64>) -> tensor<1x384x512xf32> attributes {input_names = ["input_ids", "attention_mask"], output_names = ["encoder_output"]} {
    %0 = crt.constant : () -> tensor<65001x512xf32>
    %1 = crt.constant : () -> tensor<512x512xf32>
    %2 = crt.constant : () -> tensor<512xf32>
    %3 = crt.constant : () -> tensor<512xf32>
    %4 = crt.constant : () -> tensor<512xf32>
    %5 = crt.constant : () -> tensor<512xf32>
    %6 = crt.constant : () -> tensor<512xf32>
    %7 = crt.constant : () -> tensor<512xf32>
    %8 = crt.constant : () -> tensor<2048xf32>
    %9 = crt.constant : () -> tensor<512xf32>
    %10 = crt.constant : () -> tensor<512xf32>
    %11 = crt.constant : () -> tensor<512xf32>
    %12 = crt.constant : () -> tensor<512xf32>
    %13 = crt.constant : () -> tensor<512xf32>
    %14 = crt.constant : () -> tensor<512xf32>
    %15 = crt.constant : () -> tensor<512xf32>
    %16 = crt.constant : () -> tensor<2048xf32>
    %17 = crt.constant : () -> tensor<512xf32>
    %18 = crt.constant : () -> tensor<512xf32>
    %19 = crt.constant : () -> tensor<512xf32>
    %20 = crt.constant : () -> tensor<512xf32>
    %21 = crt.constant : () -> tensor<512xf32>
    %22 = crt.constant : () -> tensor<512xf32>
    %23 = crt.constant : () -> tensor<512xf32>
    %24 = crt.constant : () -> tensor<2048xf32>
    %25 = crt.constant : () -> tensor<512xf32>
    %26 = crt.constant : () -> tensor<512xf32>
    %27 = crt.constant : () -> tensor<512xf32>
    %28 = crt.constant : () -> tensor<512xf32>
    %29 = crt.constant : () -> tensor<512xf32>
    %30 = crt.constant : () -> tensor<512xf32>
    %31 = crt.constant : () -> tensor<512xf32>
    %32 = crt.constant : () -> tensor<2048xf32>
    %33 = crt.constant : () -> tensor<512xf32>
    %34 = crt.constant : () -> tensor<512xf32>
    %35 = crt.constant : () -> tensor<512xf32>
    %36 = crt.constant : () -> tensor<512xf32>
    %37 = crt.constant : () -> tensor<512xf32>
    %38 = crt.constant : () -> tensor<512xf32>
    %39 = crt.constant : () -> tensor<512xf32>
    %40 = crt.constant : () -> tensor<2048xf32>
    %41 = crt.constant : () -> tensor<512xf32>
    %42 = crt.constant : () -> tensor<512xf32>
    %43 = crt.constant : () -> tensor<512xf32>
    %44 = crt.constant : () -> tensor<512xf32>
    %45 = crt.constant : () -> tensor<512xf32>
    %46 = crt.constant : () -> tensor<512xf32>
    %47 = crt.constant : () -> tensor<512xf32>
    %48 = crt.constant : () -> tensor<2048xf32>
    %49 = crt.constant : () -> tensor<512xf32>
    %50 = crt.constant : () -> tensor<512xf32>
    %51 = crt.constant : () -> tensor<1xi64>
    %52 = crt.constant : () -> tensor<i64>
    %53 = crt.constant : () -> tensor<i64>
    %54 = crt.constant : () -> tensor<1xi64>
    %55 = crt.constant : () -> tensor<512x512xf32>
    %56 = crt.constant : () -> tensor<512x512xf32>
    %57 = crt.constant : () -> tensor<1xi64>
    %58 = crt.constant : () -> tensor<512x512xf32>
    %59 = crt.constant : () -> tensor<512x512xf32>
    %60 = crt.constant : () -> tensor<512x2048xf32>
    %61 = crt.constant : () -> tensor<2048x512xf32>
    %62 = crt.constant : () -> tensor<512x512xf32>
    %63 = crt.constant : () -> tensor<512x512xf32>
    %64 = crt.constant : () -> tensor<512x512xf32>
    %65 = crt.constant : () -> tensor<512x512xf32>
    %66 = crt.constant : () -> tensor<512x2048xf32>
    %67 = crt.constant : () -> tensor<2048x512xf32>
    %68 = crt.constant : () -> tensor<512x512xf32>
    %69 = crt.constant : () -> tensor<512x512xf32>
    %70 = crt.constant : () -> tensor<512x512xf32>
    %71 = crt.constant : () -> tensor<512x512xf32>
    %72 = crt.constant : () -> tensor<512x2048xf32>
    %73 = crt.constant : () -> tensor<2048x512xf32>
    %74 = crt.constant : () -> tensor<512x512xf32>
    %75 = crt.constant : () -> tensor<512x512xf32>
    %76 = crt.constant : () -> tensor<512x512xf32>
    %77 = crt.constant : () -> tensor<512x512xf32>
    %78 = crt.constant : () -> tensor<512x2048xf32>
    %79 = crt.constant : () -> tensor<2048x512xf32>
    %80 = crt.constant : () -> tensor<512x512xf32>
    %81 = crt.constant : () -> tensor<512x512xf32>
    %82 = crt.constant : () -> tensor<512x512xf32>
    %83 = crt.constant : () -> tensor<512x512xf32>
    %84 = crt.constant : () -> tensor<512x2048xf32>
    %85 = crt.constant : () -> tensor<2048x512xf32>
    %86 = crt.constant : () -> tensor<512x512xf32>
    %87 = crt.constant : () -> tensor<512x512xf32>
    %88 = crt.constant : () -> tensor<512x512xf32>
    %89 = crt.constant : () -> tensor<512x512xf32>
    %90 = crt.constant : () -> tensor<512x2048xf32>
    %91 = crt.constant : () -> tensor<2048x512xf32>
    %92 = crt.constant : () -> tensor<f32>
    %93 = crt.constant : () -> tensor<1xi64>
    %94 = crt.constant : () -> tensor<f32>
    %95 = crt.constant : () -> tensor<f32>
    %96 = crt.constant : () -> tensor<f32>
    %97 = crt.constant : () -> tensor<f32>
    %98 = crt.constant : () -> tensor<f32>
    %99 = crt.constant : () -> tensor<4xi64>
    %100 = crt.constant : () -> tensor<4xi64>
    %101 = crt.constant : () -> tensor<2xi64>
    %102 = crt.reshape %arg0, %101 : (tensor<1x384xi64>, tensor<2xi64>) -> tensor<1x384xi64>
    %103 = crt.gather %0, %102 : (tensor<65001x512xf32>, tensor<1x384xi64>) -> tensor<1x384x512xf32>
    %104 = crt.mul %103, %92 : (tensor<1x384x512xf32>, tensor<f32>) -> tensor<1x384x512xf32>
    %105 = crt.constant : () -> tensor<i64>
    %106 = "onnx.Range"(%52, %105, %53) {onnx_node_name = "Range_13"} : (tensor<i64>, tensor<i64>, tensor<i64>) -> tensor<384xi64>
    %107 = crt.gather %1, %106 : (tensor<512x512xf32>, tensor<384xi64>) -> tensor<384x512xf32>
    %108 = crt.add %104, %107 : (tensor<1x384x512xf32>, tensor<384x512xf32>) -> tensor<1x384x512xf32>
    %109 = crt.unsqueeze %arg1, %54 : (tensor<1x384xi64>, tensor<1xi64>) -> tensor<1x1x384xi64>
    %110 = crt.unsqueeze %109, %93 : (tensor<1x1x384xi64>, tensor<1xi64>) -> tensor<1x1x1x384xi64>
    %111 = crt.constant : () -> tensor<4xi64>
    %112 = crt.reshape %111, %51 : (tensor<4xi64>, tensor<1xi64>) -> tensor<4xi64>
    %113 = "onnx.Equal"(%112, %100) {onnx_node_name = "Equal_39"} : (tensor<4xi64>, tensor<4xi64>) -> tensor<4xi1>
    %114 = "onnx.Where"(%113, %99, %112) {onnx_node_name = "Where_40"} : (tensor<4xi1>, tensor<4xi64>, tensor<4xi64>) -> tensor<4xi64>
    %115 = crt.expand %110, %114 : (tensor<1x1x1x384xi64>, tensor<4xi64>) -> tensor<1x1x1x384xi64>
    %116 = crt.cast %115 : (tensor<1x1x1x384xi64>) -> tensor<1x1x1x384xf32>
    %117 = crt.sub %94, %116 : (tensor<f32>, tensor<1x1x1x384xf32>) -> tensor<1x1x1x384xf32>
    %118 = crt.cast %117 : (tensor<1x1x1x384xf32>) -> tensor<1x1x1x384xi1>
    %119 = "onnx.Where"(%118, %95, %117) {onnx_node_name = "Where_48"} : (tensor<1x1x1x384xi1>, tensor<f32>, tensor<1x1x1x384xf32>) -> tensor<1x1x1x384xf32>
    %120 = crt.matmul %108, %55 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %121 = crt.add %120, %4 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %122 = crt.mul %121, %96 : (tensor<1x384x512xf32>, tensor<f32>) -> tensor<1x384x512xf32>
    %123 = crt.matmul %108, %56 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %124 = crt.add %123, %2 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %125 = crt.constant : () -> tensor<4xi64>
    %126 = crt.reshape %124, %125 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %127 = crt.transpose %126 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %128 = crt.matmul %108, %58 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %129 = crt.add %128, %3 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %130 = crt.constant : () -> tensor<4xi64>
    %131 = crt.reshape %129, %130 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %132 = crt.transpose %131 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %133 = crt.constant : () -> tensor<4xi64>
    %134 = crt.reshape %122, %133 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %135 = crt.transpose %134 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %136 = crt.constant : () -> tensor<3xi64>
    %137 = crt.reshape %135, %136 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %138 = crt.constant : () -> tensor<3xi64>
    %139 = crt.reshape %127, %138 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %140 = crt.constant : () -> tensor<3xi64>
    %141 = crt.reshape %132, %140 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %142 = crt.transpose %139 : (tensor<8x384x64xf32>) -> tensor<8x64x384xf32>
    %143 = crt.matmul %137, %142 : (tensor<8x384x64xf32>, tensor<8x64x384xf32>) -> tensor<8x384x384xf32>
    %144 = crt.constant : () -> tensor<4xi64>
    %145 = crt.reshape %143, %144 : (tensor<8x384x384xf32>, tensor<4xi64>) -> tensor<1x8x384x384xf32>
    %146 = crt.add %145, %119 : (tensor<1x8x384x384xf32>, tensor<1x1x1x384xf32>) -> tensor<1x8x384x384xf32>
    %147 = crt.constant : () -> tensor<3xi64>
    %148 = crt.reshape %146, %147 : (tensor<1x8x384x384xf32>, tensor<3xi64>) -> tensor<8x384x384xf32>
    %149 = crt.softmax %148 : (tensor<8x384x384xf32>) -> tensor<8x384x384xf32>
    %150 = crt.matmul %149, %141 : (tensor<8x384x384xf32>, tensor<8x384x64xf32>) -> tensor<8x384x64xf32>
    %151 = crt.constant : () -> tensor<4xi64>
    %152 = crt.reshape %150, %151 : (tensor<8x384x64xf32>, tensor<4xi64>) -> tensor<1x8x384x64xf32>
    %153 = crt.transpose %152 : (tensor<1x8x384x64xf32>) -> tensor<1x384x8x64xf32>
    %154 = crt.constant : () -> tensor<3xi64>
    %155 = crt.reshape %153, %154 : (tensor<1x384x8x64xf32>, tensor<3xi64>) -> tensor<1x384x512xf32>
    %156 = crt.matmul %155, %59 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %157 = crt.add %108, %156 : (tensor<1x384x512xf32>, tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %158 = crt.add %157, %5 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %159 = crt.reducemean %158 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %160 = crt.sub %158, %159 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %161 = crt.pow %160 : (tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %162 = crt.reducemean %161 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %163 = crt.add %162, %98 : (tensor<1x384x1xf32>, tensor<f32>) -> tensor<1x384x1xf32>
    %164 = crt.sqrt %163 : (tensor<1x384x1xf32>) -> tensor<1x384x1xf32>
    %165 = crt.div %160, %164 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %166 = crt.mul %165, %6 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %167 = crt.add %166, %7 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %168 = crt.matmul %167, %60 : (tensor<1x384x512xf32>, tensor<512x2048xf32>) -> tensor<1x384x2048xf32>
    %169 = crt.add %168, %8 : (tensor<1x384x2048xf32>, tensor<2048xf32>) -> tensor<1x384x2048xf32>
    %170 = "onnx.Sigmoid"(%169) {onnx_node_name = "Sigmoid_149"} : (tensor<1x384x2048xf32>) -> tensor<1x384x2048xf32>
    %171 = crt.mul %169, %170 : (tensor<1x384x2048xf32>, tensor<1x384x2048xf32>) -> tensor<1x384x2048xf32>
    %172 = crt.matmul %171, %61 : (tensor<1x384x2048xf32>, tensor<2048x512xf32>) -> tensor<1x384x512xf32>
    %173 = crt.add %166, %172 : (tensor<1x384x512xf32>, tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %174 = crt.constant : () -> tensor<512xf32>
    %175 = crt.add %173, %174 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %176 = crt.reducemean %175 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %177 = crt.sub %175, %176 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %178 = crt.pow %177 : (tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %179 = crt.reducemean %178 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %180 = crt.add %179, %98 : (tensor<1x384x1xf32>, tensor<f32>) -> tensor<1x384x1xf32>
    %181 = crt.sqrt %180 : (tensor<1x384x1xf32>) -> tensor<1x384x1xf32>
    %182 = crt.div %177, %181 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %183 = crt.mul %182, %9 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %184 = crt.add %183, %10 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %185 = crt.matmul %184, %62 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %186 = crt.add %185, %13 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %187 = crt.mul %186, %96 : (tensor<1x384x512xf32>, tensor<f32>) -> tensor<1x384x512xf32>
    %188 = crt.matmul %184, %63 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %189 = crt.add %188, %11 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %190 = crt.constant : () -> tensor<4xi64>
    %191 = crt.reshape %189, %190 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %192 = crt.transpose %191 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %193 = crt.matmul %184, %64 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %194 = crt.add %193, %12 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %195 = crt.constant : () -> tensor<4xi64>
    %196 = crt.reshape %194, %195 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %197 = crt.transpose %196 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %198 = crt.constant : () -> tensor<4xi64>
    %199 = crt.reshape %187, %198 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %200 = crt.transpose %199 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %201 = crt.constant : () -> tensor<3xi64>
    %202 = crt.reshape %200, %201 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %203 = crt.constant : () -> tensor<3xi64>
    %204 = crt.reshape %192, %203 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %205 = crt.constant : () -> tensor<3xi64>
    %206 = crt.reshape %197, %205 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %207 = crt.transpose %204 : (tensor<8x384x64xf32>) -> tensor<8x64x384xf32>
    %208 = crt.matmul %202, %207 : (tensor<8x384x64xf32>, tensor<8x64x384xf32>) -> tensor<8x384x384xf32>
    %209 = crt.constant : () -> tensor<4xi64>
    %210 = crt.reshape %208, %209 : (tensor<8x384x384xf32>, tensor<4xi64>) -> tensor<1x8x384x384xf32>
    %211 = crt.add %210, %119 : (tensor<1x8x384x384xf32>, tensor<1x1x1x384xf32>) -> tensor<1x8x384x384xf32>
    %212 = crt.constant : () -> tensor<3xi64>
    %213 = crt.reshape %211, %212 : (tensor<1x8x384x384xf32>, tensor<3xi64>) -> tensor<8x384x384xf32>
    %214 = crt.softmax %213 : (tensor<8x384x384xf32>) -> tensor<8x384x384xf32>
    %215 = crt.matmul %214, %206 : (tensor<8x384x384xf32>, tensor<8x384x64xf32>) -> tensor<8x384x64xf32>
    %216 = crt.constant : () -> tensor<4xi64>
    %217 = crt.reshape %215, %216 : (tensor<8x384x64xf32>, tensor<4xi64>) -> tensor<1x8x384x64xf32>
    %218 = crt.transpose %217 : (tensor<1x8x384x64xf32>) -> tensor<1x384x8x64xf32>
    %219 = crt.constant : () -> tensor<3xi64>
    %220 = crt.reshape %218, %219 : (tensor<1x384x8x64xf32>, tensor<3xi64>) -> tensor<1x384x512xf32>
    %221 = crt.matmul %220, %65 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %222 = crt.add %183, %221 : (tensor<1x384x512xf32>, tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %223 = crt.constant : () -> tensor<512xf32>
    %224 = crt.add %222, %223 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %225 = crt.reducemean %224 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %226 = crt.sub %224, %225 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %227 = crt.pow %226 : (tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %228 = crt.reducemean %227 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %229 = crt.add %228, %98 : (tensor<1x384x1xf32>, tensor<f32>) -> tensor<1x384x1xf32>
    %230 = crt.sqrt %229 : (tensor<1x384x1xf32>) -> tensor<1x384x1xf32>
    %231 = crt.div %226, %230 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %232 = crt.mul %231, %14 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %233 = crt.add %232, %15 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %234 = crt.matmul %233, %66 : (tensor<1x384x512xf32>, tensor<512x2048xf32>) -> tensor<1x384x2048xf32>
    %235 = crt.add %234, %16 : (tensor<1x384x2048xf32>, tensor<2048xf32>) -> tensor<1x384x2048xf32>
    %236 = "onnx.Sigmoid"(%235) {onnx_node_name = "Sigmoid_265"} : (tensor<1x384x2048xf32>) -> tensor<1x384x2048xf32>
    %237 = crt.mul %235, %236 : (tensor<1x384x2048xf32>, tensor<1x384x2048xf32>) -> tensor<1x384x2048xf32>
    %238 = crt.matmul %237, %67 : (tensor<1x384x2048xf32>, tensor<2048x512xf32>) -> tensor<1x384x512xf32>
    %239 = crt.add %232, %238 : (tensor<1x384x512xf32>, tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %240 = crt.constant : () -> tensor<512xf32>
    %241 = crt.add %239, %240 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %242 = crt.reducemean %241 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %243 = crt.sub %241, %242 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %244 = crt.pow %243 : (tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %245 = crt.reducemean %244 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %246 = crt.add %245, %98 : (tensor<1x384x1xf32>, tensor<f32>) -> tensor<1x384x1xf32>
    %247 = crt.sqrt %246 : (tensor<1x384x1xf32>) -> tensor<1x384x1xf32>
    %248 = crt.div %243, %247 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %249 = crt.mul %248, %17 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %250 = crt.add %249, %18 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %251 = crt.matmul %250, %68 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %252 = crt.add %251, %21 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %253 = crt.mul %252, %96 : (tensor<1x384x512xf32>, tensor<f32>) -> tensor<1x384x512xf32>
    %254 = crt.matmul %250, %69 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %255 = crt.add %254, %19 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %256 = crt.constant : () -> tensor<4xi64>
    %257 = crt.reshape %255, %256 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %258 = crt.transpose %257 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %259 = crt.matmul %250, %70 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %260 = crt.add %259, %20 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %261 = crt.constant : () -> tensor<4xi64>
    %262 = crt.reshape %260, %261 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %263 = crt.transpose %262 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %264 = crt.constant : () -> tensor<4xi64>
    %265 = crt.reshape %253, %264 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %266 = crt.transpose %265 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %267 = crt.constant : () -> tensor<3xi64>
    %268 = crt.reshape %266, %267 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %269 = crt.constant : () -> tensor<3xi64>
    %270 = crt.reshape %258, %269 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %271 = crt.constant : () -> tensor<3xi64>
    %272 = crt.reshape %263, %271 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %273 = crt.transpose %270 : (tensor<8x384x64xf32>) -> tensor<8x64x384xf32>
    %274 = crt.matmul %268, %273 : (tensor<8x384x64xf32>, tensor<8x64x384xf32>) -> tensor<8x384x384xf32>
    %275 = crt.constant : () -> tensor<4xi64>
    %276 = crt.reshape %274, %275 : (tensor<8x384x384xf32>, tensor<4xi64>) -> tensor<1x8x384x384xf32>
    %277 = crt.add %276, %119 : (tensor<1x8x384x384xf32>, tensor<1x1x1x384xf32>) -> tensor<1x8x384x384xf32>
    %278 = crt.constant : () -> tensor<3xi64>
    %279 = crt.reshape %277, %278 : (tensor<1x8x384x384xf32>, tensor<3xi64>) -> tensor<8x384x384xf32>
    %280 = crt.softmax %279 : (tensor<8x384x384xf32>) -> tensor<8x384x384xf32>
    %281 = crt.matmul %280, %272 : (tensor<8x384x384xf32>, tensor<8x384x64xf32>) -> tensor<8x384x64xf32>
    %282 = crt.constant : () -> tensor<4xi64>
    %283 = crt.reshape %281, %282 : (tensor<8x384x64xf32>, tensor<4xi64>) -> tensor<1x8x384x64xf32>
    %284 = crt.transpose %283 : (tensor<1x8x384x64xf32>) -> tensor<1x384x8x64xf32>
    %285 = crt.constant : () -> tensor<3xi64>
    %286 = crt.reshape %284, %285 : (tensor<1x384x8x64xf32>, tensor<3xi64>) -> tensor<1x384x512xf32>
    %287 = crt.matmul %286, %71 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %288 = crt.add %249, %287 : (tensor<1x384x512xf32>, tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %289 = crt.constant : () -> tensor<512xf32>
    %290 = crt.add %288, %289 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %291 = crt.reducemean %290 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %292 = crt.sub %290, %291 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %293 = crt.pow %292 : (tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %294 = crt.reducemean %293 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %295 = crt.add %294, %98 : (tensor<1x384x1xf32>, tensor<f32>) -> tensor<1x384x1xf32>
    %296 = crt.sqrt %295 : (tensor<1x384x1xf32>) -> tensor<1x384x1xf32>
    %297 = crt.div %292, %296 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %298 = crt.mul %297, %22 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %299 = crt.add %298, %23 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %300 = crt.matmul %299, %72 : (tensor<1x384x512xf32>, tensor<512x2048xf32>) -> tensor<1x384x2048xf32>
    %301 = crt.add %300, %24 : (tensor<1x384x2048xf32>, tensor<2048xf32>) -> tensor<1x384x2048xf32>
    %302 = "onnx.Sigmoid"(%301) {onnx_node_name = "Sigmoid_381"} : (tensor<1x384x2048xf32>) -> tensor<1x384x2048xf32>
    %303 = crt.mul %301, %302 : (tensor<1x384x2048xf32>, tensor<1x384x2048xf32>) -> tensor<1x384x2048xf32>
    %304 = crt.matmul %303, %73 : (tensor<1x384x2048xf32>, tensor<2048x512xf32>) -> tensor<1x384x512xf32>
    %305 = crt.add %298, %304 : (tensor<1x384x512xf32>, tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %306 = crt.constant : () -> tensor<512xf32>
    %307 = crt.add %305, %306 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %308 = crt.reducemean %307 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %309 = crt.sub %307, %308 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %310 = crt.pow %309 : (tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %311 = crt.reducemean %310 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %312 = crt.add %311, %98 : (tensor<1x384x1xf32>, tensor<f32>) -> tensor<1x384x1xf32>
    %313 = crt.sqrt %312 : (tensor<1x384x1xf32>) -> tensor<1x384x1xf32>
    %314 = crt.div %309, %313 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %315 = crt.mul %314, %25 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %316 = crt.add %315, %26 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %317 = crt.matmul %316, %74 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %318 = crt.add %317, %29 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %319 = crt.mul %318, %96 : (tensor<1x384x512xf32>, tensor<f32>) -> tensor<1x384x512xf32>
    %320 = crt.matmul %316, %75 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %321 = crt.add %320, %27 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %322 = crt.constant : () -> tensor<4xi64>
    %323 = crt.reshape %321, %322 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %324 = crt.transpose %323 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %325 = crt.matmul %316, %76 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %326 = crt.add %325, %28 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %327 = crt.constant : () -> tensor<4xi64>
    %328 = crt.reshape %326, %327 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %329 = crt.transpose %328 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %330 = crt.constant : () -> tensor<4xi64>
    %331 = crt.reshape %319, %330 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %332 = crt.transpose %331 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %333 = crt.constant : () -> tensor<3xi64>
    %334 = crt.reshape %332, %333 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %335 = crt.constant : () -> tensor<3xi64>
    %336 = crt.reshape %324, %335 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %337 = crt.constant : () -> tensor<3xi64>
    %338 = crt.reshape %329, %337 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %339 = crt.transpose %336 : (tensor<8x384x64xf32>) -> tensor<8x64x384xf32>
    %340 = crt.matmul %334, %339 : (tensor<8x384x64xf32>, tensor<8x64x384xf32>) -> tensor<8x384x384xf32>
    %341 = crt.constant : () -> tensor<4xi64>
    %342 = crt.reshape %340, %341 : (tensor<8x384x384xf32>, tensor<4xi64>) -> tensor<1x8x384x384xf32>
    %343 = crt.add %342, %119 : (tensor<1x8x384x384xf32>, tensor<1x1x1x384xf32>) -> tensor<1x8x384x384xf32>
    %344 = crt.constant : () -> tensor<3xi64>
    %345 = crt.reshape %343, %344 : (tensor<1x8x384x384xf32>, tensor<3xi64>) -> tensor<8x384x384xf32>
    %346 = crt.softmax %345 : (tensor<8x384x384xf32>) -> tensor<8x384x384xf32>
    %347 = crt.matmul %346, %338 : (tensor<8x384x384xf32>, tensor<8x384x64xf32>) -> tensor<8x384x64xf32>
    %348 = crt.constant : () -> tensor<4xi64>
    %349 = crt.reshape %347, %348 : (tensor<8x384x64xf32>, tensor<4xi64>) -> tensor<1x8x384x64xf32>
    %350 = crt.transpose %349 : (tensor<1x8x384x64xf32>) -> tensor<1x384x8x64xf32>
    %351 = crt.constant : () -> tensor<3xi64>
    %352 = crt.reshape %350, %351 : (tensor<1x384x8x64xf32>, tensor<3xi64>) -> tensor<1x384x512xf32>
    %353 = crt.matmul %352, %77 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %354 = crt.add %315, %353 : (tensor<1x384x512xf32>, tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %355 = crt.constant : () -> tensor<512xf32>
    %356 = crt.add %354, %355 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %357 = crt.reducemean %356 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %358 = crt.sub %356, %357 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %359 = crt.pow %358 : (tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %360 = crt.reducemean %359 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %361 = crt.add %360, %98 : (tensor<1x384x1xf32>, tensor<f32>) -> tensor<1x384x1xf32>
    %362 = crt.sqrt %361 : (tensor<1x384x1xf32>) -> tensor<1x384x1xf32>
    %363 = crt.div %358, %362 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %364 = crt.mul %363, %30 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %365 = crt.add %364, %31 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %366 = crt.matmul %365, %78 : (tensor<1x384x512xf32>, tensor<512x2048xf32>) -> tensor<1x384x2048xf32>
    %367 = crt.add %366, %32 : (tensor<1x384x2048xf32>, tensor<2048xf32>) -> tensor<1x384x2048xf32>
    %368 = "onnx.Sigmoid"(%367) {onnx_node_name = "Sigmoid_497"} : (tensor<1x384x2048xf32>) -> tensor<1x384x2048xf32>
    %369 = crt.mul %367, %368 : (tensor<1x384x2048xf32>, tensor<1x384x2048xf32>) -> tensor<1x384x2048xf32>
    %370 = crt.matmul %369, %79 : (tensor<1x384x2048xf32>, tensor<2048x512xf32>) -> tensor<1x384x512xf32>
    %371 = crt.add %364, %370 : (tensor<1x384x512xf32>, tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %372 = crt.constant : () -> tensor<512xf32>
    %373 = crt.add %371, %372 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %374 = crt.reducemean %373 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %375 = crt.sub %373, %374 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %376 = crt.pow %375 : (tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %377 = crt.reducemean %376 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %378 = crt.add %377, %98 : (tensor<1x384x1xf32>, tensor<f32>) -> tensor<1x384x1xf32>
    %379 = crt.sqrt %378 : (tensor<1x384x1xf32>) -> tensor<1x384x1xf32>
    %380 = crt.div %375, %379 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %381 = crt.mul %380, %33 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %382 = crt.add %381, %34 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %383 = crt.matmul %382, %80 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %384 = crt.add %383, %37 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %385 = crt.mul %384, %96 : (tensor<1x384x512xf32>, tensor<f32>) -> tensor<1x384x512xf32>
    %386 = crt.matmul %382, %81 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %387 = crt.add %386, %35 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %388 = crt.constant : () -> tensor<4xi64>
    %389 = crt.reshape %387, %388 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %390 = crt.transpose %389 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %391 = crt.matmul %382, %82 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %392 = crt.add %391, %36 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %393 = crt.constant : () -> tensor<4xi64>
    %394 = crt.reshape %392, %393 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %395 = crt.transpose %394 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %396 = crt.constant : () -> tensor<4xi64>
    %397 = crt.reshape %385, %396 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %398 = crt.transpose %397 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %399 = crt.constant : () -> tensor<3xi64>
    %400 = crt.reshape %398, %399 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %401 = crt.constant : () -> tensor<3xi64>
    %402 = crt.reshape %390, %401 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %403 = crt.constant : () -> tensor<3xi64>
    %404 = crt.reshape %395, %403 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %405 = crt.transpose %402 : (tensor<8x384x64xf32>) -> tensor<8x64x384xf32>
    %406 = crt.matmul %400, %405 : (tensor<8x384x64xf32>, tensor<8x64x384xf32>) -> tensor<8x384x384xf32>
    %407 = crt.constant : () -> tensor<4xi64>
    %408 = crt.reshape %406, %407 : (tensor<8x384x384xf32>, tensor<4xi64>) -> tensor<1x8x384x384xf32>
    %409 = crt.add %408, %119 : (tensor<1x8x384x384xf32>, tensor<1x1x1x384xf32>) -> tensor<1x8x384x384xf32>
    %410 = crt.constant : () -> tensor<3xi64>
    %411 = crt.reshape %409, %410 : (tensor<1x8x384x384xf32>, tensor<3xi64>) -> tensor<8x384x384xf32>
    %412 = crt.softmax %411 : (tensor<8x384x384xf32>) -> tensor<8x384x384xf32>
    %413 = crt.matmul %412, %404 : (tensor<8x384x384xf32>, tensor<8x384x64xf32>) -> tensor<8x384x64xf32>
    %414 = crt.constant : () -> tensor<4xi64>
    %415 = crt.reshape %413, %414 : (tensor<8x384x64xf32>, tensor<4xi64>) -> tensor<1x8x384x64xf32>
    %416 = crt.transpose %415 : (tensor<1x8x384x64xf32>) -> tensor<1x384x8x64xf32>
    %417 = crt.constant : () -> tensor<3xi64>
    %418 = crt.reshape %416, %417 : (tensor<1x384x8x64xf32>, tensor<3xi64>) -> tensor<1x384x512xf32>
    %419 = crt.matmul %418, %83 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %420 = crt.add %381, %419 : (tensor<1x384x512xf32>, tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %421 = crt.constant : () -> tensor<512xf32>
    %422 = crt.add %420, %421 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %423 = crt.reducemean %422 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %424 = crt.sub %422, %423 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %425 = crt.pow %424 : (tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %426 = crt.reducemean %425 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %427 = crt.add %426, %98 : (tensor<1x384x1xf32>, tensor<f32>) -> tensor<1x384x1xf32>
    %428 = crt.sqrt %427 : (tensor<1x384x1xf32>) -> tensor<1x384x1xf32>
    %429 = crt.div %424, %428 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %430 = crt.mul %429, %38 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %431 = crt.add %430, %39 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %432 = crt.matmul %431, %84 : (tensor<1x384x512xf32>, tensor<512x2048xf32>) -> tensor<1x384x2048xf32>
    %433 = crt.add %432, %40 : (tensor<1x384x2048xf32>, tensor<2048xf32>) -> tensor<1x384x2048xf32>
    %434 = "onnx.Sigmoid"(%433) {onnx_node_name = "Sigmoid_613"} : (tensor<1x384x2048xf32>) -> tensor<1x384x2048xf32>
    %435 = crt.mul %433, %434 : (tensor<1x384x2048xf32>, tensor<1x384x2048xf32>) -> tensor<1x384x2048xf32>
    %436 = crt.matmul %435, %85 : (tensor<1x384x2048xf32>, tensor<2048x512xf32>) -> tensor<1x384x512xf32>
    %437 = crt.add %430, %436 : (tensor<1x384x512xf32>, tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %438 = crt.constant : () -> tensor<512xf32>
    %439 = crt.add %437, %438 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %440 = crt.reducemean %439 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %441 = crt.sub %439, %440 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %442 = crt.pow %441 : (tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %443 = crt.reducemean %442 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %444 = crt.add %443, %98 : (tensor<1x384x1xf32>, tensor<f32>) -> tensor<1x384x1xf32>
    %445 = crt.sqrt %444 : (tensor<1x384x1xf32>) -> tensor<1x384x1xf32>
    %446 = crt.div %441, %445 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %447 = crt.mul %446, %41 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %448 = crt.add %447, %42 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %449 = crt.constant : () -> tensor<1xi64>
    %450 = crt.constant : () -> tensor<1xi64>
    %451 = crt.matmul %448, %86 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %452 = crt.add %451, %45 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %453 = crt.mul %452, %96 : (tensor<1x384x512xf32>, tensor<f32>) -> tensor<1x384x512xf32>
    %454 = crt.matmul %448, %87 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %455 = crt.add %454, %43 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %456 = crt.constant : () -> tensor<4xi64>
    %457 = crt.reshape %455, %456 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %458 = crt.transpose %457 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %459 = crt.matmul %448, %88 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %460 = crt.add %459, %44 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %461 = crt.constant : () -> tensor<4xi64>
    %462 = crt.reshape %460, %461 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %463 = crt.transpose %462 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %464 = crt.constant : () -> tensor<4xi64>
    %465 = crt.reshape %453, %464 : (tensor<1x384x512xf32>, tensor<4xi64>) -> tensor<1x384x8x64xf32>
    %466 = crt.transpose %465 : (tensor<1x384x8x64xf32>) -> tensor<1x8x384x64xf32>
    %467 = crt.constant : () -> tensor<3xi64>
    %468 = crt.reshape %466, %467 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %469 = crt.constant : () -> tensor<3xi64>
    %470 = crt.reshape %458, %469 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %471 = crt.constant : () -> tensor<3xi64>
    %472 = crt.reshape %463, %471 : (tensor<1x8x384x64xf32>, tensor<3xi64>) -> tensor<8x384x64xf32>
    %473 = crt.constant : () -> tensor<1xi64>
    %474 = crt.transpose %470 : (tensor<8x384x64xf32>) -> tensor<8x64x384xf32>
    %475 = crt.matmul %468, %474 : (tensor<8x384x64xf32>, tensor<8x64x384xf32>) -> tensor<8x384x384xf32>
    %476 = crt.concat %449, %57, %450, %473 : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<4xi64>
    %477 = crt.reshape %475, %476 : (tensor<8x384x384xf32>, tensor<4xi64>) -> tensor<1x8x384x?xf32>
    %478 = crt.add %477, %119 : (tensor<1x8x384x?xf32>, tensor<1x1x1x384xf32>) -> tensor<1x8x384x384xf32>
    %479 = crt.constant : () -> tensor<1xi64>
    %480 = crt.concat %479, %450, %473 : (tensor<1xi64>, tensor<1xi64>, tensor<1xi64>) -> tensor<3xi64>
    %481 = crt.reshape %478, %480 : (tensor<1x8x384x384xf32>, tensor<3xi64>) -> tensor<1x1x1xf32>
    %482 = crt.softmax %481 : (tensor<1x1x1xf32>) -> tensor<1x1x1xf32>
    %483 = crt.matmul %482, %472 : (tensor<1x1x1xf32>, tensor<8x384x64xf32>) -> tensor<8x?x64xf32>
    %484 = crt.constant : () -> tensor<4xi64>
    %485 = crt.reshape %483, %484 : (tensor<8x?x64xf32>, tensor<4xi64>) -> tensor<1x8x384x64xf32>
    %486 = crt.transpose %485 : (tensor<1x8x384x64xf32>) -> tensor<1x384x8x64xf32>
    %487 = crt.constant : () -> tensor<3xi64>
    %488 = crt.reshape %486, %487 : (tensor<1x384x8x64xf32>, tensor<3xi64>) -> tensor<1x384x512xf32>
    %489 = crt.matmul %488, %89 : (tensor<1x384x512xf32>, tensor<512x512xf32>) -> tensor<1x384x512xf32>
    %490 = crt.add %447, %489 : (tensor<1x384x512xf32>, tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %491 = crt.constant : () -> tensor<512xf32>
    %492 = crt.add %490, %491 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %493 = crt.reducemean %492 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %494 = crt.sub %492, %493 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %495 = crt.pow %494 : (tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %496 = crt.reducemean %495 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %497 = crt.add %496, %98 : (tensor<1x384x1xf32>, tensor<f32>) -> tensor<1x384x1xf32>
    %498 = crt.sqrt %497 : (tensor<1x384x1xf32>) -> tensor<1x384x1xf32>
    %499 = crt.div %494, %498 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %500 = crt.mul %499, %46 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %501 = crt.add %500, %47 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %502 = crt.matmul %501, %90 : (tensor<1x384x512xf32>, tensor<512x2048xf32>) -> tensor<1x384x2048xf32>
    %503 = crt.add %502, %48 : (tensor<1x384x2048xf32>, tensor<2048xf32>) -> tensor<1x384x2048xf32>
    %504 = "onnx.Sigmoid"(%503) {onnx_node_name = "Sigmoid_729"} : (tensor<1x384x2048xf32>) -> tensor<1x384x2048xf32>
    %505 = crt.mul %503, %504 : (tensor<1x384x2048xf32>, tensor<1x384x2048xf32>) -> tensor<1x384x2048xf32>
    %506 = crt.matmul %505, %91 : (tensor<1x384x2048xf32>, tensor<2048x512xf32>) -> tensor<1x384x512xf32>
    %507 = crt.add %500, %506 : (tensor<1x384x512xf32>, tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %508 = crt.constant : () -> tensor<512xf32>
    %509 = crt.add %507, %508 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %510 = crt.reducemean %509 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %511 = crt.sub %509, %510 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %512 = crt.pow %511 : (tensor<1x384x512xf32>) -> tensor<1x384x512xf32>
    %513 = crt.reducemean %512 : (tensor<1x384x512xf32>) -> tensor<1x384x1xf32>
    %514 = crt.add %513, %98 : (tensor<1x384x1xf32>, tensor<f32>) -> tensor<1x384x1xf32>
    %515 = crt.sqrt %514 : (tensor<1x384x1xf32>) -> tensor<1x384x1xf32>
    %516 = crt.div %511, %515 : (tensor<1x384x512xf32>, tensor<1x384x1xf32>) -> tensor<1x384x512xf32>
    %517 = crt.mul %516, %49 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    %518 = crt.add %517, %50 : (tensor<1x384x512xf32>, tensor<512xf32>) -> tensor<1x384x512xf32>
    return %518 : tensor<1x384x512xf32>
  }
  "onnx.EntryPoint"() {func = @main_graph} : () -> ()
}
